:HEADER:
#+STARTUP: fold
#+STARTUP: hideblocks
#+STARTUP: hidedrawers
:END:
* delux-nix :noweb yes
#+NAME: delux-nix  
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/configuration.nix :noweb yes :mkdirp yes
{ config, pkgs, ... }:
{
  imports =
    [ 
        ./hardware.nix
        ./filesystem.nix
        ./services.nix
        ./packages.nix
        ./enviroments.nix
        ./programm-configs.nix
    ];

  

  users.users.andrey = {
    isNormalUser = true;
    extraGroups = [ "wheel" "audio" "video" "docker" "networkmanager" "vboxusers"]; 
    shell=pkgs.bashInteractive;
     };
  networking.hostName = "delux"; 
  time.timeZone = "Europe/Zaporozhye";
  i18n.defaultLocale = "ru_RU.UTF-8";

  
  documentation.man = { enable = true; man-db.enable = false;
  mandoc.enable = true; };
  documentation.dev.enable = true;


  # Это значение определяет версию NixOS, из которой по умолчанию
  # настройки для данных с отслеживанием состояния, таких как расположение файлов и версии базы данных
  # в вашей системе были приняты. Все в порядке, рекомендуется уйти.
  # это значение в версии первой установки этой системы.
  # Прежде чем менять это значение, прочтите документацию по этой опции
  # (например, man Configuration.nix или https://nixos.org/nixos/options.html).
  system.stateVersion = "21.11"; # Did you read the comment?
  system.autoUpgrade.enable = false;

}




#+END_SRC
* delux-nix-usb :noweb yes
#+NAME: delux-nix-usb  
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix-usb/configuration.nix :noweb yes :mkdirp yes
{ config, pkgs, ... }:
{
  imports =
    [ 
        ./hardware.nix
        ./filesystem.nix
        ../delux-nix/services.nix
        ../delux-nix/packages.nix
        ../delux-nix/enviroments.nix
        ../delux-nix/programm-configs.nix
    ];

  

  users.users.andrey = {
    isNormalUser = true;
    extraGroups = [ "wheel" "audio" "video" "docker" "networkmanager" "vboxusers"]; 
    shell=pkgs.bashInteractive;
     };
  networking.hostName = "delux"; 
  time.timeZone = "Europe/Zaporozhye";
  i18n.defaultLocale = "ru_RU.UTF-8";

  
  documentation.man = { enable = true; man-db.enable = false;
  mandoc.enable = true; };
  documentation.dev.enable = true;


  # Это значение определяет версию NixOS, из которой по умолчанию
  # настройки для данных с отслеживанием состояния, таких как расположение файлов и версии базы данных
  # в вашей системе были приняты. Все в порядке, рекомендуется уйти.
  # это значение в версии первой установки этой системы.
  # Прежде чем менять это значение, прочтите документацию по этой опции
  # (например, man Configuration.nix или https://nixos.org/nixos/options.html).
  system.stateVersion = "21.11"; # Did you read the comment?
  system.autoUpgrade.enable = false;

}
#+END_SRC
* hardware
** delux
#+NAME: hardware-delux  
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/hardware.nix :noweb yes :mkdirp yes
# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
 
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
}

#+END_SRC
** delux-usb
#+NAME: hardware-delux-usb  
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix-usb/hardware.nix :noweb yes :mkdirp yes
<<hardware-delux>>
#+END_SRC
* filesystem
** delux
#+NAME: filesystem delux  
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/filesystem.nix :noweb yes :mkdirp yes
# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, lib, pkgs, ... }:

{
  imports = [  ];

  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
#  boot.supportedFilesystems = [ "bcachefs" ];
  #boot.loader.grub.useOSProber=true;
  boot.loader.grub.efiSupport = false;
  # boot.loader.grub.efiInstallAsRemovable = true;
  # boot.loader.efi.efiSysMountPoint = "/boot/efi";
  # Define on which hard drive you want to install Grub.
  boot.loader.grub.device = "/dev/sda"; # or "nodev" for efi only
  boot.loader.grub.extraEntries=''
    menuentry "Nixos usb" {
      configfile (hd0,msdos1)/nixos/boot/grub/grub.cfg
      };
  '';


  fileSystems."/" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=nixos" ];
    };

#  fileSystems."/var/lib/trilium" =
#    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
#      fsType = "btrfs";
#      options = [ "subvol=trilium,compress=zstd" ];
#    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=nixhome,compress=zstd" ];
    };

  fileSystems."/home/andrey/Загрузки" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Downloads,compress=zstd" ];
    };

  fileSystems."/home/andrey/Calibre" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Calibre,compress=zstd" ];
    };

  fileSystems."/home/andrey/Data" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Data,compress=zstd" ];
    };

  fileSystems."/home/andrey/Документы" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Documents,compress=zstd" ];
    };

  fileSystems."/home/andrey/git" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=git,compress=zstd" ];
    };
  fileSystems."/home/andrey/tiddlywiki" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=tiddlywiki,compress=zstd" ];
    };

  fileSystems."/home/andrey/iso" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=iso" ];
    };

  fileSystems."/home/andrey/Музыка" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Music" ];
    };


  fileSystems."/home/andrey/Изображения" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Pictures" ];
    };

  fileSystems."/home/andrey/Видео" =
    { device = "/dev/disk/by-uuid/bb4cca63-bde0-4af7-855e-af49a68efef8";
      fsType = "btrfs";
      options = [ "subvol=Videos" ];
    };

#  swapDevices =
#    [{ device = "/dev/disk/by-uuid/b1ebe430-0521-4e8c-bff5-8465da7c5b82"; }
#      { device = "/dev/disk/by-uuid/829e4469-28ed-4deb-8cbc-348ecaed4aee"; }
 #   ];



   zramSwap.enable=true;

#   services.nfs.server.enable = true;
#   services.nfs.server.exports = "/home/andrey 192.168.0.1/24(no_root_squash,ro) \n";
  services.samba.enable=true;
  services.samba.settings ={ public =
      { path = "/home/andrey";
      "read only" = true;
      browseable = "yes";
      "guest ok" = "yes";
      comment = "Public samba share.";
      };
    };
}


#+END_SRC
** delux-usb
#+NAME: filesystem delux-usb  
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix-usb/filesystem.nix :noweb yes :mkdirp yes
{ config, lib, pkgs, ... }:

{
  imports = [  ];


  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
#  boot.supportedFilesystems = ["bcachefs"];
  boot.loader.grub.useOSProber=false;
  boot.loader.grub.efiSupport = false;
  boot.loader.grub.device = "/dev/sdb"; # or "nodev" for efi only
  boot.loader.grub.extraEntries=''
    menuentry "Nixos sata" {
      configfile (hd1,msdos1)/nixos/boot/grub/grub.cfg
      };
#    menuentry "guix sata" {
#      configfile (hd1,msdos1)/guix/boot/grub/grub.cfg
      }
  '';



  fileSystems."/" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=nixos" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=nixhome,compress=zstd" ];
    };

  fileSystems."/home/andrey/Загрузки" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Downloads,compress=zstd" ];
    };

  fileSystems."/home/andrey/Calibre" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Calibre,compress=zstd" ];
    };

  fileSystems."/home/andrey/Data" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Data,compress=zstd" ];
    };

  fileSystems."/home/andrey/Документы" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Documents,compress=zstd" ];
    };

  fileSystems."/home/andrey/tiddlywiki" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=tiddlywiki,compress=zstd" ];
    };

  fileSystems."/home/andrey/git" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=git,compress=zstd" ];
    };

  fileSystems."/home/andrey/iso" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=iso" ];
    };

  fileSystems."/home/andrey/Музыка" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Music" ];
    };

#  fileSystems."/home/andrey/Notesbooks" =
#    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
#      fsType = "btrfs";
#      options = [ "subvol=Notesbooks,compress=zstd" ];
#    };

  fileSystems."/home/andrey/Изображения" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Pictures" ];
    };

  fileSystems."/home/andrey/Видео" =
    { device = "/dev/disk/by-uuid/b6affbcd-6022-4593-a686-3070bdc8bc64";
      fsType = "btrfs";
      options = [ "subvol=Videos" ];
    };

#  swapDevices =
#    [ { device = "/dev/disk/by-uuid/b1ebe430-0521-4e8c-bff5-8465da7c5b82"; }
#      { device = "/dev/disk/by-uuid/829e4469-28ed-4deb-8cbc-348ecaed4aee"; }
#    ];

    zramSwap.enable=true;
    
}
#+END_SRC
* services
** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
{ config, pkgs, ... }:
{
#  sound.enable = true;
#  hardware.pulseaudio.enable = true;

  services.sshd.enable = true;

#  services.guix.enable=true;

#+END_SRC
* packages
** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
{ config, pkgs,  ... }:
let unstable = import <unstable> {};
in { 
  nixpkgs.config.allowUnfree = true;
  nixpkgs.config.allowBrocken = true;
#  nixpkgs.config.permittedInsecurePackages = [
#    "electron-25.9.0"
#    "qtwebkit-5.212.0-alpha4"
#             ];

  environment.systemPackages = with pkgs; [
    firefox
    tridactyl-native
    texliveFull
#    tectonic
#    typst

#+END_SRC
* enviroments
** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
{ config, pkgs, ... }:
{
#+END_SRC
* programm-configs
** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
{ config, pkgs, ... }:
{

#+END_SRC
* заготовки
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC

* net
** services
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
  networking.networkmanager.enable = true;
  networking.firewall.enable = false;


  services.tor.enable = true;
  services.tor.client.dns.enable = true;

 # services.trilium-server={
 #     enable = true;
 #     port = 8899;
 #   };
  services.tt-rss.enable=true;
  services.tt-rss.singleUserMode=true;
  services.tt-rss.selfUrlPath="http://localhost";
  services.tt-rss.database.port=5437;
  services.postgresql.settings.port=5437;
  services.postgresql.enable=true;
  
#+END_SRC
** packages
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    aria2 # загрузчик
    crow-translate # онлайн перевод выделенного текста no guix  
    curl # загрузка  с интернета
    nethogs
    inetutils
    tdesktop # Telegram-Desktop
    yt-dlp
    wget # хагрузка файлов с сети
    w3m # тестовый интернет браузер
    tcpdump
 #   signal-desktop
 #   whatsapp-for-linux
    whatweb
    qutebrowser
    chromium
#+end_src
** programm-configs
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
  programs.mtr.enable = true;
  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
   };
#+end_src
*** chromium
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
programs.chromium.enable = true;
programs.chromium.extraOpts = {
  "SyncDisabled" = true;
  "PasswordManagerEnabled" = false;
  "SpellcheckEnabled" = true;
  "SpellcheckLanguage" = [
    "ru"
    "en-US"
    "uk"
  ];
};
#+END_SRC
*** qutebrowser
**** config
***** Импорт
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
import os
import shutil
#+END_SRC
***** Разрешения
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
config.set('content.cookies.accept', 'all', 'chrome-devtools://*')
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')
# config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:90.0) Gecko/20100101 Firefox/90.0', 'https://accounts.google.com/*')

config.set('content.images', True, 'chrome-devtools://*')
config.set('content.images', True, 'devtools://*')
config.set('content.javascript.enabled', True, 'chrome-devtools://*')
config.set('content.javascript.enabled', True, 'devtools://*')
config.set('content.javascript.enabled', True, 'chrome://*/*')
config.set('content.javascript.enabled', True, 'qute://*/*')

config.set('content.local_content_can_access_remote_urls', True, 'file:///home/andrey/.local/share/qutebrowser/userscripts/*')
config.set('content.local_content_can_access_file_urls', False, 'file:///home/andrey/.local/share/qutebrowser/userscripts/*')

config.set('content.notifications.enabled', False, 'https://web.telegram.org')
config.set('content.notifications.enabled', False, 'https://www.facebook.com')

#+END_SRC
***** Алиасы
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
c.aliases = {'w': 'session-save',
             'q': 'close',
             'qa': 'quit',
             'wq': 'quit --save',
             'wqa': 'quit --save',
             'magnet':'hint -f magnet run :spawn -m aria2c "{hint-url}"',
             }

#+END_SRC
***** Хинты и их селекторы
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
c.hints.mode='number'
c.hints.selectors = {'all':  ['a', 'area', 'textarea', 'select',
                             'input:not([type="hidden"])',
			     'button', 'frame', 'iframe', 'img', 'link', 'summary',
			     '[contenteditable]:not([contenteditable="false"])', '[onclick]',
			     '[onmousedown]', '[role="link"]', '[role="option"]',
			     '[role="button"]', '[ng-click]', '[ngClick]',
			     '[data-ng-click]', '[x-ng-click]', '[tabindex]'],

                     'links': ['a[href]', 'area[href]', 'link[href]', '[role="link"][href]'],
                     'images': ['img'], 'media': ['audio', 'img', 'video'],
		     'url': ['[src]', '[href]'],
                     'inputs': ['input[type="text"]', 'input[type="date"]',
		            'input[type="datetime-local"]', 'input[type="email"]',
			    'input[type="month"]', 'input[type="number"]',
			    'input[type="password"]', 'input[type="search"]', 'input[type="tel"]'
			    , 'input[type="time"]', 'input[type="url"]', 'input[type="week"]',
			    'input:not([type])', '[contenteditable]:not([contenteditable="false"])',
			    'textarea'],
                     'tgmsg': ['div.Message'],
                     'magnet': ['a[href^="magnet"]']
                     }

#+END_SRC
***** Поисковики
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
c.url.open_base_url = True 
c.url.searchengines = {
		  'DEFAULT': 'https://iask.ai/?mode=question&q={}', 
		  'g' : 'https://www.google.com/search?q={}',
		  'd' : 'https://duckduckgo.com/?q={}',
		  'bi': 'https://global.bing.com/search?setmkt=en-us&setlang=en-us&q={}',
		  'sw': 'https://swisscows.com/web?culture=ru&region=iv&query={}',
		  'br': 'https://search.brave.com/search?q={}&source=web',
		  #AI
		  'ay': 'https://you.com/search?&tbm=youchat&cfr=chat&q={}',
		  'ap': 'https://www.perplexity.ai/search?q={}',
		  'awl': 'https://www.wolframalpha.com/input?i={}',
                  'awp': 'https://www.webpilot.ai/search?q={}',
                  'ams': 'https://felladrin-minisearch.hf.space/?q={}',
                  'ais': 'https://isou.chat/search?q={}',
                  'aia': 'https://iask.ai/?mode=question&q={}',
                  'axd': 'https://www.xdash.ai/search?q={}',
                  'ags': 'https://www.genspark.ai/search?query={}', # попробовать сделать умолчанием
                  'tg': 'https://thegigabrain.com/search/{}',
                  'aex': 'https://exa.ai/search?q={}',
                  'adf': 'https://www.deepfind.co/{}',
                   
		  #IT
		  'so':  'http://stackoverflow.com/search?q={}',
		  'gh': 'https://github.com/search?q={}', 
		  'io': 'https://libraries.io/search?q={}',
		  #медиа
		  'yt': 'https://www.youtube.com/results?search_query={}',
		  'fl': 'https://www.flickr.com/search/?text={}',
		  'v': 'https://vimeo.com/search?q={}',
		  #вики
		  'we': 'https://en.wikipedia.org/wiki/{}',
		  'wu': 'https://uk.wikipedia.org/wiki/{}',
		  'wr': 'https://ru.wikipedia.org/wiki/{}',
		  'wa': 'https://wiki.archlinux.org/index.php?title=Special:Search&search={}',
		  #файлы
		  'rt': 'https://global.bing.com/search?setmkt=en-us&setlang=en-us&q=!site:rutracker.org {}', 
		  'lg': 'http://libgen.is/search.php?view=simple&res=25&phrase=1&column=def&page=1&req={}', 
		  #social
		  'bl': 'http://www.blogsearchengine.org/search.html?q={}',
		  'ss': 'https://www.social-searcher.com/social-buzz/?q5={}',
		  #переводчики и словари
		  'gt': 'https://translate.google.com/#view=home&op=translate&sl=auto&tl=ru&text={}'
		  }

#+END_SRC
***** Разные настройки
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes

c.auto_save.session = True

c.zoom.default = "175%"

c.colors.webpage.darkmode.algorithm = 'lightness-cielab'
c.colors.webpage.darkmode.enabled = False
c.colors.webpage.darkmode.policy.page = 'smart'
c.colors.webpage.preferred_color_scheme = 'auto'

c.completion.open_categories = ['searchengines',  'history', 'filesystem']

c.content.default_encoding = 'utf-8'
c.content.pdfjs = False
c.content.plugins = True

c.downloads.location.directory = '' 
c.downloads.location.remember= True 
c.downloads.location.prompt = True 
c.downloads.location.suggestion = 'both'
c.downloads.position = 'bottom'

c.editor.command = ['emacs', '+{line}', '{file}']

c.spellcheck.languages = ['en-US','ru-RU','uk-UA']

c.tabs.mousewheel_switching = False

# c.url.default_page = '/home/andrey/tiddlywiki/notes.html'
# c.url.start_pages = ['/home/andrey/tiddlywiki/notes.html']

c.window.title_format = '{perc}{current_title}'
c.fileselect.folder.command=['bash','-c','kitty ranger --chooser-file {}' ]
c.fileselect.single_file.command=['bash','-c','kitty yazi --chooser-file {} /home/andrey/Загрузки/' ]
c.fileselect.multiple_files.command=['bash','-c','kitty yazi --chooser-file {} /home/andrey/Загрузки/' ]
c.fileselect.handler='external'

#+END_SRC
***** Назначение клавиш
****** Открыть uri
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_open_url={
'cmd-set-text -s :open -t' : ['o','щ'],
'cmd-set-text -s :open ' : ['O','Щ'],
# 'cmd-set-text -s :open -p' : ['wp','цз'],
# 'cmd-set-text -s :open -b' : ['wb','ци'],
# 'cmd-set-text -s :open -w {url}' : ['wu','цг'],
# 'cmd-set-text -s :open -t {url}' : ['wU','цГ'],
'cmd-set-text -s :open -t {clipboard}' : ['pp','зз'],
'cmd-set-text -s :open -t {primary}' : ['pP','зЗ'],
'cmd-set-text -s :open  {clipboard}' : ['Pp','Зз'],
'cmd-set-text -s :open  {primary}' : ['PP','ЗЗ'],
}
#+END_SRC
****** Хинты
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_hints={
'hint images window' : [';i','жш'],
'hint images' : [';I','жШ'],
'hint links fill :open -t -r {hint-url}' : [';o','жщ'],
'hint links fill :open {hint-url}' : [';O','жЩ'],
'hint links yank' : [';y','жн'],
'hint links yank-primary' : [';Y','жН'],
'hint all tab-bg' : [';b','жи'],
'hint links download' : [';d','жв'],
'hint all window' : ['F','жА'],
'hint all tab-fg' : [';f','жа'],
'hint --rapid links tab-bg' : [';r','жк'],
'hint all hover' : [';h','жн'],
'hint inputs' : [';t','же'],
'hint' : ['f','а'],
'hint inputs --first' : ['gi','пш'],
 }
#+END_SRC
****** Вкладки
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_tabs={
'tab-focus 1' : ['<Alt-1>',''],
'tab-focus 2' : ['<Alt-2>',''],
'tab-focus 3' : ['<Alt-3>',''],
'tab-focus 4' : ['<Alt-4>',''],
'tab-focus 5' : ['<Alt-5>',''],
'tab-focus 6' : ['<Alt-6>',''],
'tab-focus 7' : ['<Alt-7>',''],
'tab-focus 8' : ['<Alt-8>',''],
'tab-focus -1' : ['<Alt-9>',''],
'tab-next' : ['t<Right>','е<Right>'],
'tab-prev' : ['t<Left>','е<Left>'],
'tab-focus last' : ['t ','е '],
'tab-pin' : ['tp','ез'],
'tab-close' : ['x','ч'],
'tab-close -o' : ['X','Ч'],
'cmd-set-text -sr :tab-focus' : ['tt','ее'],
'tab-only' : ['to','ещ'],
'tab-focus -1' : ['t$','е;'],
'tab-focus 1' : ['t0','t^','е0','е:'],
'tab-clone' : ['tc','ес'],
'tab-give -p' : ['tg','еп'],
'cmd-set-text -s :tab-take' : ['tw','ец'],

'tab-move' : ['tm','еь'],
'tab-mute' : ['ts','еі'],
}
#+END_SRC
****** Окна
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
#d_windows={
#'open -w' : ['<Ctrl-N>',''],
#}
#+END_SRC
****** Закладки
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_bookmarks={
'home' : ['~'],
'cmd-set-text -s :quickmark-load -t' : ['b','и'],
'cmd-set-text -s :quickmark-load ' : ['B','И'],
'cmd-set-text -s :bookmark-load -t' : ['gb','пи'],
'cmd-set-text -s :bookmark-load ' : ['gB','пИ'],
'quickmark-save' : ['m','ь'],
'bookmark-add' : ['M','Ь'],
'bookmark-list -t' : ['gq','пй'],
}
#+END_SRC
****** История, навигация по url
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_history={
'navigate decrement' : ['gu+','пг+'],
'navigate increment' : ['gu-','пг_'],
'back' : ['h<left>','р<left>'],
'forward' : ['h<Right>','р<Right>'],
'navigate prev' : ['[[','хх'],
'navigate next' : [']]','її'],
'navigate prev -t' : ['{{','ХХ'],
'navigate next -t' : ['}}','ЇЇ'],
'history -t' : ['hh','рр'],
'navigate up' : ['gu<Up>','пг<Up>'],
'back -w' : ['ht<Left>','ре<Left>'],
'scroll-to-perc 0' : ['gg','пп'],
'navigate up -w' : ['gU<Up>','пГ<Up>'],
'forward -w' : ['hw<Right>','рц<Right>'],
'scroll-to-perc' : ['G','П'],
}
#+END_SRC
****** Изменение масштаба
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_zoom={
'zoom-in' : ['+',''],
'zoom-out' : ['-',''],
'zoom' : ['=',''],
}
#+END_SRC
****** Буфер обмена
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_clipboard={
'yank domain' : ['yd','нв'],
'yank domain -s' : ['Yd','Нв'],
'yank inline [{title}]({url})' : ['ym','нь'],
'yank inline [{title}]({url}) -s' : ['Ym','Нь'],
'yank inline [[{url}][{title}]]' : ['yo','нщ'],
'yank inline [[{url}][{title}]] -s' : ['Yo','Нщ'],
'yank pretty-url' : ['yp','нз'],
'yank pretty-url -s' : ['Yp','Нз'],
'yank title' : ['yt','не'],
'yank title -s' : ['Yt','Не'],
'yank' : ['yy','нн'],
'yank -s' : ['YY','НН'],
}
#+END_SRC
****** Параметры конфигурации
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_config={
'cmd-set-text -s :set -t' : ['ss','іі'],
'cmd-set-text -s :set' : ['SS','ІІ'],
'cmd-set-text -s :bind' : ['sb','іи'],
'cmd-set-text -s :set messages.timeout' : ['sm','іь'],
'config-cycle -p -u *://*.{url:host}/* content.cookies.accept all no-3rdparty never ;; reload' : ['TCH','ЕСР'],
'config-cycle -p -u *://{url:host}/* content.cookies.accept all no-3rdparty never ;; reload' : ['TCh','ЕСр'],
'config-cycle -p -u {url} content.cookies.accept all no-3rdparty never ;; reload' : ['TCu','ЕСг'],
'config-cycle -p -u *://*.{url:host}/* content.images ;; reload' : ['TIH','ЕШР'],
'config-cycle -p -u *://{url:host}/* content.images ;; reload' : ['TIh','ЕШр'],
'config-cycle -p -u {url} content.images ;; reload' : ['TIu','ЕШг'],
'config-cycle -p -u *://*.{url:host}/* content.plugins ;; reload' : ['TPH','ЕЗР'],
'config-cycle -p -u *://{url:host}/* content.plugins ;; reload' : ['TPh','ЕЗр'],
'config-cycle -p -u {url} content.plugins ;; reload' : ['TPu','ЕЗг'],
'config-cycle -p -u *://*.{url:host}/* content.javascript.enabled ;; reload' : ['TSH','ЕІР'],
'config-cycle -p -u *://{url:host}/* content.javascript.enabled ;; reload' : ['TSh','ЕІр'],
'config-cycle -p -u {url} content.javascript.enabled ;; reload' : ['TSu','ЕІг'],
'config-cycle -p -t -u *://*.{url:host}/* content.cookies.accept all no-3rdparty never ;; reload' : ['TcH','ЕсР'],
'config-cycle -p -t -u *://{url:host}/* content.cookies.accept all no-3rdparty never ;; reload' : ['Tch','Еср'],
'config-cycle -p -t -u {url} content.cookies.accept all no-3rdparty never ;; reload' : ['Tcu','Есг'],
'config-cycle -p -t -u *://*.{url:host}/* content.images ;; reload' : ['TiH','ЕшР'],
'config-cycle -p -t -u *://{url:host}/* content.images ;; reload' : ['Tih','Ешр'],
'config-cycle -p -t -u {url} content.images ;; reload' : ['Tiu','Ешг'],
'config-cycle -p -t -u *://*.{url:host}/* content.plugins ;; reload' : ['TpH','ЕзР'],
'config-cycle -p -t -u *://{url:host}/* content.plugins ;; reload' : ['Tph','Езр'],
'config-cycle -p -t -u {url} content.plugins ;; reload' : ['Tpu','Езг'],
'config-cycle -p -t -u *://*.{url:host}/* content.javascript.enabled ;; reload' : ['TsH','ЕіР'],
'config-cycle -p -t -u *://{url:host}/* content.javascript.enabled ;; reload' : ['Tsh','Еір'],
'config-cycle -p -t -u {url} content.javascript.enabled ;; reload' : ['Tsu','Еіг'],
}
#+END_SRC
****** Загрузки
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_download={
'download-cancel' : ['da','вф'],
'download-delete' : ['dx','вч'],
'download-clear' : ['dc','вс'],
'download' : ['dd','вв'],
'download-open' : ['do','вщ'],
}
#+END_SRC
****** Клавиши режима каретки
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_caret_mode={
'move-to-end-of-line' : ['$',''],
'move-to-start-of-line' : ['0',''],
'selection-drop' : ['<Ctrl-Space>',''],
'mode-leave' : ['<Escape>',''],
'yank selection' : ['<Return>',''],
'selection-toggle' : ['<Space>',''],
'move-to-end-of-document' : ['G','П'],
'scroll left' : ['<Ctrl-Left>',''],
'scroll down' : ['<Ctrl-Down>',''],
'scroll up' : ['<Ctrl-Up>',''],
'scroll right' : ['<Ctrl-Right>',''],
'selection-toggle --line' : ['V','М'],
'yank selection -s' : ['Y','Н'],
'move-to-start-of-prev-block' : ['[','х'],
'move-to-start-of-next-block' : [']','ї'],
'move-to-prev-word' : ['b','и'],
'mode-enter normal' : ['c','с'],
'move-to-end-of-word' : ['e','у'],
'move-to-start-of-document' : ['gg','пп'],
'move-to-prev-char' : ['<Left>',''],
'move-to-next-line' : ['<Down>',''],
'move-to-prev-line' : ['<Up>',''],
'move-to-next-char' : ['<Right>',''],
'selection-reverse' : ['o','щ'],
'selection-toggle' : ['v','м'],
'move-to-next-word' : ['w','ц'],
'yank selection' : ['y','н'],
'move-to-end-of-prev-block' : ['{','Х'],
'move-to-end-of-next-block' : ['}','Ї'],
}
#+END_SRC
****** Клавиши командного режима
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_command_mode={
'rl-backward-word' : ['<Alt-B>',''],
'rl-backward-kill-word' : ['<Alt-Backspace>',''],
'rl-kill-word' : ['<Alt-D>',''],
'rl-forward-word' : ['<Alt-F>',''],
'rl-delete-char' : ['<Ctrl-?>',''],
'rl-beginning-of-line' : ['<Ctrl-A>',''],
'rl-backward-char' : ['<Ctrl-B>',''],
'completion-item-yank' : ['<Ctrl-C>',''],
'completion-item-del' : ['<Ctrl-D>',''],
'rl-end-of-line' : ['<Ctrl-E>',''],
'rl-forward-char' : ['<Ctrl-F>',''],
'rl-backward-delete-char' : ['<Ctrl-H>',''],
'rl-kill-line' : ['<Ctrl-K>',''],
'command-history-next' : ['<Ctrl-N>',''],
'command-history-prev' : ['<Ctrl-P>',''],
'command-accept --rapid' : ['<Ctrl-Return>',''],
'completion-item-yank --sel' : ['<Ctrl-Shift-C>',''],
'completion-item-focus prev-category' : ['<Ctrl-Shift-Tab>',''],
'rl-filename-rubout' : ['<Ctrl-Shift-W>',''],
'completion-item-focus next-category' : ['<Ctrl-Tab>',''],
'rl-unix-line-discard' : ['<Ctrl-U>',''],
'rl-rubout " "' : ['<Ctrl-W>',''],
'rl-yank' : ['<Ctrl-Y>',''],
'completion-item-focus --history next' : ['<Down>',''],
'mode-leave' : ['<Escape>',''],
'completion-item-focus next-page' : ['<PgDown>',''],
'completion-item-focus prev-page' : ['<PgUp>',''],
'command-accept' : ['<Return>',''],
'completion-item-del' : ['<Shift-Delete>',''],
'completion-item-focus prev' : ['<Shift-Tab>',''],
'completion-item-focus next' : ['<Tab>',''],
'completion-item-focus --history prev' : ['<Up>',''],
'cmd-set-text -a {url}' : ['<Alt+Space>u','<Alt+Space>г'], 
'cmd-set-text -a {url:pretty}' : ['<Alt+Space>w','<Alt+Space>ц'], 
'cmd-set-text -a {url:host}' : ['<Alt+Space>h','<Alt+Space>р'], 
'cmd-set-text -a {url:domain}' : ['<Alt+Space>d','<Alt+Space>в'], 
'cmd-set-text -a {url:query}' : ['<Alt+Space>q','<Alt+Space>й'], 
'cmd-set-text -a {url:port}' : ['<Alt+Space>p','<Alt+Space>з'], 
'cmd-set-text -a {title}' : ['<Alt+Space>t','<Alt+Space>е'], 
'cmd-set-text -a {clipboard}' : ['<Alt+Space>y','<Alt+Space>н'], 
'cmd-set-text -a {primary}' : ['<Alt+Space>s','<Alt+Space>і'], 
}
#+END_SRC
****** Клавиши режима хинтов
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_hint_mode={
'hint all tab-bg' : ['<Ctrl-B>',''],
'hint links' : ['<Ctrl-F>',''],
'hint --rapid links tab-bg' : ['<Ctrl-R>',''],
'mode-leave' : ['<Escape>',''],
'hint-follow' : ['<Return>',''],
}
#+END_SRC
****** Клавиши режима вставки
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_insert_mode={
'edit-text' : ['<Ctrl-E>',''],
'mode-leave' : ['<Escape>',''],
'fake-key <Escape>' : ['<Shift-Escape>',''],
'insert-text -- {primary}' : ['<Shift-Ins>',''],
'spawn -m -u crow {primary}' : ['<Alt+Space>c','<Alt+Space>с'],
}
#+END_SRC
****** Режим passhtrough
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_passhtrough_mode={
'mode-leave' : ['<Shift-Escape>',''],
}
#+END_SRC
****** Режим prompt
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_prompt_mode={
'rl-backward-word' : ['<Alt-B>',''],
'rl-backward-kill-word' : ['<Alt-Backspace>',''],
'rl-kill-word' : ['<Alt-D>',''],
'rl-forward-word' : ['<Alt-F>',''],
'prompt-yank --sel' : ['<Alt-Shift-Y>',''],
'prompt-yank' : ['<Alt-Y>',''],
'rl-delete-char' : ['<Ctrl-?>',''],
'rl-beginning-of-line' : ['<Ctrl-A>',''],
'rl-backward-char' : ['<Ctrl-B>',''],
'rl-end-of-line' : ['<Ctrl-E>',''],
'rl-forward-char' : ['<Ctrl-F>',''],
'rl-backward-delete-char' : ['<Ctrl-H>',''],
'rl-kill-line' : ['<Ctrl-K>',''],
'prompt-open-download --pdfjs' : ['<Ctrl-P>',''],
'rl-filename-rubout' : ['<Ctrl-Shift-W>',''],
'rl-unix-line-discard' : ['<Ctrl-U>',''],
'rl-rubout " "' : ['<Ctrl-W>',''],
'prompt-open-download' : ['<Ctrl-X>',''],
'rl-yank' : ['<Ctrl-Y>',''],
'prompt-item-focus next' : ['<Down>',''],
'mode-leave' : ['<Escape>',''],
'prompt-accept' : ['<Return>',''],
'prompt-item-focus prev' : ['<Shift-Tab>',''],
'prompt-item-focus next' : ['<Tab>',''],
'prompt-item-focus prev' : ['<Up>',''],
}
#+END_SRC
****** Режим yesno
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_yesno_mode={
'prompt-yank --sel' : ['<Alt-Shift-Y>',''],
'prompt-yank' : ['<Alt-Y>',''],
'mode-leave' : ['<Escape>',''],
'prompt-accept' : ['<Return>',''],
'prompt-accept --save no' : ['N'],
'prompt-accept --save yes' : ['Y'],
'prompt-accept no' : ['n'],
'prompt-accept yes' : ['y'],
}
#+END_SRC
****** Мои команды
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_spawn={
'cmd-set-text -s :spawn' : ['!!',''],
'spawn kitty ranger' : ['!r','!к'],
'spawn kitty' : ['!t','!е'],
'magnet' : ['!m','!ь'],
'cmd-set-text -s :spawn yt-dlp  {clipboard}' : ['!y','!н'],
'spawn chromium {url}' : ['c!','с!'],
#'spawn kitty --hold  jupyter server list' : ['!j','!о'],
}

d_my_other={
'hint tgmsg userscript tgmsg' : [',<Space>','б<Space>'],
"jseval window.location.href= '{url:domain}'.replace(/\\./g,'-')+'.translate.goog'+'{url:path}'+'?_x_tr_sl=auto&_x_tr_tl=ru&_x_tr_hl=uk&_x_tr_pto=wapp'" : [',t','бе'],
'spawn -m -u crow {primary}' : [',c','бс'],
}
#+END_SRC
****** Разное
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
d_other={
'repeat-command' : ['.','ю'],
'cmd-set-text /' : ['/',''],
'cmd-set-text :' : [':','Ж'],
'print' : ['<Ctrl-Alt-p>',''],
'quit' : ['<Ctrl-Q>',''],
'selection-follow' : ['<Ctrl-Return>',''],
'nop' : ['<Ctrl-Shift-Tab>',''],
'mode-enter passthrough' : ['<Ctrl-V>',''],
'stop' : ['<Ctrl-s>',''],
'clear-keychain ;; search ;; fullscreen --leave' : ['<Escape>',''],
#'fullscreen' : ['<F11>',''],
'selection-follow -t' : ['<Return>',''],
'cmd-set-text ?' : ['?',''],
'macro-run' : ['@',''],
'quit' : ['ZQ','ЯЙ'],
'quit --save' : ['ЯЯ','ZZ'],
'undo -w' : ['U','Г'],
'mode-enter caret ;; selection-toggle --line' : ['V','М'],
'search-prev' : ['N','Т'],
'reload -f' : ['R','К'],
'view-source' : ['gf','па'],
'search-next' : ['n','т'],
'mode-enter insert' : ['i','ш'],
'macro-record' : ['q','й'],
'reload' : ['r','к'],
'save' : ['sf','іа'],
'undo' : ['u','г'],
'mode-enter caret' : ['v','м'],
'devtools-focus' : ['wIf','цШа'],
'devtools left' : ['wI<Left>','цШ<Left>'],
'devtools bottom' : ['wI<Down>','цШ<Down>'],
'devtools top' : ['wI<Up>','цШ<Up>'],
'devtools right' : ['wI<Right>','цШ<Right>'],
'devtools window' : ['wIw','цШц'],
'devtools' : ['wi','цш'],
'insert-text {clipboard}' : ['<Ctrl-V>','<Ctrl-Y>'],
}
#+END_SRC
****** Назначение ранее определенных клавиш
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
def d_bind(d,m):
    for c, k_l in d.items():
        for k in k_l:
            if k:
                config.bind(k,c,mode=m)


c.bindings.default={}
for d in [d_open_url,d_hints,d_tabs,d_history,d_clipboard,d_bookmarks,d_zoom,d_config,d_download,d_other]:
    d_bind(d,'normal')
d_bind(d_caret_mode,'caret')
d_bind(d_command_mode,'command')
d_bind(d_hint_mode,'hint')
d_bind(d_insert_mode,'insert')
d_bind(d_passhtrough_mode,'passthrough')
d_bind(d_prompt_mode,'prompt')
d_bind(d_yesno_mode,'yesno')
d_bind(d_spawn,'normal')
d_bind(d_my_other,'normal')

#+END_SRC
****** Загрузка автоконфигурации 
#+BEGIN_SRC python :tangle ~/.config/qutebrowser/config.py :mkdirp yes
config.load_autoconfig()
#+END_SRC
**** quickmarks
#+BEGIN_SRC text :tangle  ~/.config/qutebrowser/quickmarks_ :mkdirp yes 
social facebook https://www.facebook.com
social telegramz https://web.telegram.org/a/#-1153786240
social whatsapp https://web.whatsapp.com/
chatgpt https://chat.openai.com/
calibre http://localhost:2222/
privat24 https://next.privat24.ua/
google news https://news.google.com/topstories?hl=ru&gl=UA&ceid=UA:ru
git https://github.com/AndrijSkeptyk
nixos https://search.nixos.org/packages
docs https://readthedocs.org/
whois https://whois.ru/today.ua
ai libretranslate http://localhost:5000
search fadar https://www.faganfinder.com/
doc https://i3wm.org/docs/userguide.html
doc  bcachefs https://bcachefs.org/
ai poe https://poe.com/
tur 1 https://turkishtv.co/934-rannyaya-ptashka-erkenci-kus-vse-serii-na-russkom-yazyke-tureckiy-serial-smotret-onlayn.html
ai git docker farfalle https://github.com/rashadphz/farfalle
google blogger https://draft.blogger.com/blog/posts/1207372942119176135
ai image erase https://huggingface.co/spaces/finegrain/finegrain-object-eraser
book lg https://libgen.is/
roam https://github-com.translate.goog/org-roam/org-roam?_x_tr_sl=auto&_x_tr_tl=ru&_x_tr_hl=uk&_x_tr_pto=wapp
tur 2 https://turoktv.com/2937-a59-zimorodok-seria-1.html
torrent rutracker net https://rutracker.net
torrent rutracker org https://rutracker.net
ai whisher large https://huggingface.co/spaces/hf-audio/whisper-large-v3-turbo
ai wisher jax https://huggingface.co/spaces/sanchit-gandhi/whisper-jax#:~:text=whisper-jax.%20like%202.25k.%20Running%20App%20Files%20Files%20Community%20126%20Refreshing.
agent ai https://github-com.translate.goog/mikekelly/AgentK?_x_tr_sl=auto&_x_tr_tl=ru&_x_tr_hl=uk&_x_tr_pto=wapp
ai image background https://huggingface.co/spaces/innova-ai/video-background-removal
matecat https://www.matecat.com/
ai chat gemimy https://gemini.google.com/app/937aa3ab7add86b6?hl=en-IN
ai translator quillbot https://quillbot.com/translate?_x_tr_hist=true
ai translator reverso https://www.reverso.net/text-translation
ai translator mashine translate https://www.machinetranslation.com/
#+END_SRC
**** bookmarks
#+BEGIN_SRC text :tangle  ~/.config/qutebrowser/bookmarks/urls_ :mkdirp yes 
http://stable-diffusion-guide.s3-website-us-west-2.amazonaws.com/v2/things.html stable diffusion prompt study v2
https://a16z.com/ai-survey/getting-started/ About This Site | Andreessen Horowitz
https://aitopics.org/search AITopics
https://app.cedille.ai/ cedille.ai | Ваш писательский помощник. :text :ai
https://colab.research.google.com/#scrollTo=5fCEDCU_qrC0 Добро пожаловать в Colaboratory! - Colaboratory
https://data2data.ru/tts/ Текст в речь :ai :text :speech
https://dataconomy.com/2022/11/meta-galactica-ai-demo-model-how-use-paper/ Galactica AI от Meta: 
https://fabiocolacio.github.io/Marker/ markdown editor
https://github.com/DamienCassou/json-navigator  Просмотр структур :json и навигация по ним :emacs
https://github.com/DavidAnson/markdownlint-cli2 GitHub - DavidAnson/markdownlint-cli2: Быстрый, гибкий интерфейс командной строки на основе конфигурации для проверки файлов Markdown/CommonMark с помощью библиотеки markdownlint.
https://github.com/Guang000/Awesome-Dataset-Distillation Guang000/Awesome-Dataset-Distillation: Потрясающие документы по дистилляции набора данных
https://github.com/RHVoice/RHVoice RHVoice/RHVoice: бесплатный синтезатор речи с открытым исходным кодом для русского и других языков
https://github.com/SolarLune/Grout Grout :wm :tiling
https://github.com/Sygil-Dev/sygil-webui GitHub - Sygil-Dev/sygil-webui: Стабильный веб-интерфейс Diffusion
https://github.com/ai-collection/ai-collection/
https://github.com/altryne/awesome-ai-art-image-synthesis :ai :image :collection
https://github.com/awesomedata/awesome-public-datasets awesomedata/awesome-public-datasets: :ai :detasets :collection
https://github.com/denisidoro/navi  denisidoro/navi: An interactive cheatsheet tool for the command-line
https://github.com/divamgupta/diffusionbee-stable-diffusion-ui  Diffusion Bee — это самый простой способ запустить Stable Diffusion локально на вашем M1 Mac. Поставляется с установщиком в один клик. Никаких зависимостей или технических знаний не требуется.
https://github.com/eugeneyan/open-llms  Список открытых LLM, доступных для коммерческого использования.
https://github.com/ggerganov/llama.cpp ggerganov/llama.cpp: Порт модели LLaMA Facebook на C/C++
https://github.com/grocid/gtile GitHub - grocid/gtile :wm :tilining
https://github.com/jbhuang0604/awesome-computer-vision  :ai :collection
https://github.com/luong-komorebi/Awesome-Linux-Software  :linux :collection
https://github.com/mckaywrigley/ai-code-translator mckaywrigley/ai-code-translator: Используйте ИИ для перевода кода с одного языка на другой. :ai :code :translator
https://github.com/miyuchina/mistletoe  Быстрый, расширяемый и соответствующий спецификациям анализатор :markdown на чистом Python.
https://github.com/openai/gpt-2 openai/gpt-2: :ai :gpt2 :text
https://github.com/openai/whisper GitHub  openai/whisper: распознавание речи :ai :transcoder :text :speech
https://github.com/paperswithcode/galai  Модель API для GALACTICA :ai
https://github.com/peterwang512/FALdetector#2-run-our-models  Код для статьи: Обнаружение отфотошопленных лиц с помощью сценариев Photoshop 
https://github.com/pharmapsychotic/clip-interrogator : Image to prompt with BLIP and CLIP
https://github.com/reorx/awesome-chatgpt-api :chatgpt :api тщательно подобранный список приложений и инструментов, которые не только используют новый API ChatGPT, но и позволяют пользователям настраивать свои собственные ключи API, что позволяет бесплатно и по запросу использовать их собственную квоту. :gpt
https://github.com/ssokolow/quicktile :wm tiling
https://github.com/topics :topic :git 
https://github.com/vzakharov/jukebox-webui webui: Веб-интерфейс на базе Google Colab для создания музыки с помощью OpenAI Jukebox :ai :sound :music
https://habr.com/ru/articles/718438/ Медицинские датасеты для машинного обучения: цели, типы и способы применения :ai :collection :dataset :habr
https://habr.com/ru/post/129343/ Учимся писать userscript'ы / Хабр :userscript :js :habr
https://habr.com/ru/post/60977/ Синтез русской речи в Linux / Хабр :habr
https://huggingface.co/spaces/huggingface-projects/diffuse-the-rest Diffuse The Rest --- пространство для обнимающего лица от Huggingface-projects
https://huggingface.co/spaces/kazuk/youtube-whisper-09 Youtube Whisper - a Hugging Face Space by kazuk
https://huggingface.co/spaces/stabilityai/stable-diffusion Stable Diffusion 2-1 - a Hugging Face Space by stabilityai
https://huggingface.co/succinctly/text2image-prompt-generator?text=face+of+skeptyk+inspect+postmodernism succinctly/text2image-prompt-generator · Hugging Face
https://mdformat.readthedocs.io/en/stable/ mdformat 0.7.17 documentation
https://omegat.org/ru/ OmegaT — свободная программа для автоматизации перевода
https://onedev.net/post/244 TTS движки для Ubuntu Linux (Text-to-Speak)
https://paperswithcode.com/dataset/cifar-10 CIFAR-10 Dataset | Papers With Code
https://products.wolframalpha.com/api Wolfram|Alpha APIs: Интеграция вычислительных знаний
https://proximacentaurib.notion.site/2b07d3195d5948c6a7e5836f9d535592?v=b5b75a67cc52483c9965cfc141f6f582 Stable Diffusion V1 Modifier Studies | Просмотр галереи
https://replicate.com/methexis-inc/img2prompt/examples Examples -- methexis-inc/img2prompt -- Replicate
https://replicate.com/nightmareai/real-esrgan nightmareai/real-esrgan -- Запуск с помощью API при репликации
https://replicate.com/stability-ai/stable-diffusion stability-ai/stable-diffusion -- Запуск с помощью API при репликации
https://resources.wolframcloud.com/NeuralNetRepository/ Wolfram Репозиторий нейронных сетей моделей нейронных сетей
https://resources.wolframcloud.com/NeuralNetRepository/resources/GPT2-Transformer-Trained-on-WebText-Data/ Преобразование GPT2 - Wolfram Neural Net Repository
https://rizzoma.com/topic/9f46f955831323f11a6b5c159f841eee/0_b_6com_83f1h/ Rizzoma
https://ru.gecid.com/nouts/samsung_r60plus/ Обзор ноутбука SAMSUNG R60Plus GECID.com.
https://rutracker.org RuTracker
https://rytr.me/ Rytr - Лучший ИИ-писатель, генератор контента и помощник по написанию
https://same.energy/search?q=jo 'jo' on Same Energy
https://summate.it/ Summate.it --- быстро резюмируйте веб-статьи
https://typeset.io/ Откройте для себя, создайте и опубликуйте свою исследовательскую работу | SciSpace по набору
https://wiki.archlinux.org/title/Festival_(%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9) Festival (Русский) - ArchWiki
https://www.aicyclopedia.com/ AIcyclopedia | Самая большая энциклопедия искусственного интеллекта
https://www.allsearch.ai/ AllSearch.ai
https://www.craiyon.com/ Craiyon, AI Генератор изображений
https://www.deepl.com/translator/files DeepL Translate: The world's most accurate translator
https://www.perplexity.ai/ Perplexity AI: Ask Anything
https://www.quora.com/ Quora
https://www.remove.bg/ Remove Background from Image for Free – remove.bg
https://www.reverso.net/text-translation Reverso  перевод, словарь
https://www.riffusion.com/?&prompt=classical+italian+tenor+operatic+pop&denoising=0.75&seedImageId=og_beat Riffusion
https://www.summarize.tech/ summary.tech: видеорезюме на основе искусственного интеллекта
https://www.text-to-speech.online/?ref=aicollection Free Text to Speech Online Converter Tools
https://www.veed.io/pricing Pricing - VEED.IO
https://www.wolfram.com/resources/tools-for-AIs/ Wolfram Tools for AIs: Связи с вычислительным интеллектом
https://www.wolframalpha.com/input?i=weather+Zaporizhzhya+last+year погода в Запорожье в прошлом году 
https://you.com/search?q=who+are+you&tbm=youchat&cfr=chat who are you 
#+END_SRC
* x11
** services
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
  services.xserver.enable = true;
  services.xserver.xkb.layout = "us,ua";
  services.xserver.xkb.variant = "rus";
  services.xserver.xkb.options = "grp:rctrl_rshift_toggle,nbsp:level3,lv3:ralt_switch, ctrl:nocaps";
  services.xserver.displayManager.lightdm.enable = true;
  services.displayManager.autoLogin.enable = true;
  services.displayManager.autoLogin.user = "andrey";
  services.displayManager.defaultSession = "xfce";
  services.xserver.windowManager.i3.extraSessionCommands =  "${pkgs.feh}/bin/feh --bg-scale --no-xinerama $HOME/.background-image"; 
 
  services.xserver.desktopManager.xfce.enable = true;
  services.xserver.desktopManager.xfce.noDesktop = true;
  services.xserver.windowManager.i3.enable = true;
  services.xserver.windowManager.i3.package = pkgs.i3-rounded;

  xdg.portal.extraPortals= [
                             pkgs.xdg-desktop-portal-gnome
			      ];
  xdg.portal.enable=true;

    services.picom = {
    enable = true;
    backend = "glx";
    shadow = true;
    shadowExclude = [
      "_GTK_FRAME_EXTENTS@:c"
      "class_g = '.ulauncher-wrapped'"
      "class_g = 'Conky'"
      "class_g = 'Peek'"
      "class_g = 'Ulauncher'"
      "class_g = 'gromit-mpx'"
      "class_g = 'i3-frame'"
      "name = 'Polybar tray window'"
      "name = 'polybar-blur-noshadow'"
      "name = 'polybar-noblur-noshadow'"
    ];
  };


#+END_SRC
** packages
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    kitty
    satty # аннотация скриншотов 
    font-manager # менеджер шрифтов no guix
    fontpreview # nnn depend optinal viewer  no guix
    copyq # продвинутый менеджер буфера обмена
    picom # композитор для оконых менеджеров
    system-config-printer
    terminus_font # шрифт
    terminus_font_ttf # шрифт
    xsane # работа со сканером
    dconf
    gnome-control-center
    glib-networking
    dconf-editor
    zenity # gui диалоги
#    gtdialog # gui диалоги
    ncurses # создание tui 
#    nerdfonts # шрифты
   kbdd # сохраняет в каждом окне свою раскладку
   xkblayout-state
   xclip # работа з буфером обмена
   xdg-utils # работа с mime файлами
   xdotool # робота с окнами X11
   xorg.libX11 # для X11
   xorg.libXft # для X11
   xorg.libXinerama # для X11
   xorg.libXrandr # для X11
   xorg.libXScrnSaver # для X11
   xorg.xev # спросмотр событий окна
   xorg.xmessage # для X11
   xorg.xkill # закрытие окна и удаление его процесса
   terminus_font
   wmctrl
   gsettings-qt
   gsettings-desktop-schemas
  
# XFCE4
   xfce.xfce4-panel 
   xfce.xfce4-timer-plugin
   xfce.xfce4-genmon-plugin
   xfce.xfce4-weather-plugin
   xfce.xfce4-netload-plugin
   xfce.xfce4-fsguard-plugin
   xfce.xfce4-verve-plugin
   xfce.xfce4-xkb-plugin
   xfce.xfce4-whiskermenu-plugin
   xfce.xfce4-sensors-plugin
   xfce.xfce4-pulseaudio-plugin
   xfce.xfce4-datetime-plugin
   xfce.xfce4-volumed-pulse
   xfce.thunar-volman
   xfce.thunar-archive-plugin
   xfce.thunar-media-tags-plugin
#+END_SRC
** programm-configs
*** cortile
#+BEGIN_SRC toml :tangle ~/.config/cortile/config.toml  :mkdirp yes
     ################################################################################
     #                                                                              #
     #           https://github.com/leukipp/cortile/blob/main/config.toml           #
     #                                                                              #
     ################################################################################

     #################################### Tiling ####################################

    # Tiling will be enabled on application start if set to true (true | false).
    tiling_enabled = true

    # Initial tiling layout ("vertical-left" | "vertical-right" | "horizontal-top" | "horizontal-bottom" | "maximized" | "fullscreen").
    tiling_layout = "maximized"

    # An overlay window is displayed for this time period [ms] when the layout was changed (0 = disabled).
    tiling_gui = 1500

    # Menu entries in systray which shows the tiling state as icon ([] = disabled).
    # tiling_icon = [
    #   ["ACTION", "TEXT"] = ["action strings from [keys] section", "text to show in the menu"],
    #   ["", ""] = "show a separator line",
    # ]
    tiling_icon = [
	["toggle", "Enabled"],
	["", ""],
	["master_increase", "Add Master"],
	["master_decrease", "Remove Master"],
	["", ""],
	["slave_increase", "Add Slave"],
	["slave_decrease", "Remove Slave"],
	["", ""],
	["reset", "Reset"],
	["exit", "Exit"],
    ]

    #################################### Window ####################################

    # Regex RE2 syntax to ignore windows (WM_CLASS string can be found by running `xprop WM_CLASS`).
    # window_ignore = [
    #   ["WM_CLASS", "WM_NAME"] = ["ignore all windows with this class", "but allow those with this name"]
    # ]
    window_ignore = [
	["nm.*", ""],
	["xfce4-appfinder", ""],
	["gcr.*", ""],
	["polkit.*", ""],
	["wrapper.*", ""],
	["lightdm.*", ""],
	["blueman.*", ""],
	["pavucontrol.*", ""],
	["firefox.*", ".*Mozilla Firefox"],
    ]

    # Maximum number of allowed master windows (0 - 5).
    window_masters_max = 2

    # Maximum number of allowed slave windows (1 - 5).
    window_slaves_max = 4

    # How much space should be left between windows (0 - 100).
    window_gap_size = 5

    # Window decorations will be removed if set to false (true | false).
    window_decoration = true

    ################################## Proportion ##################################

    # How much to increment/decrement master-slave area (0.0 - 1.0).
    proportion_step = 0.05

    # Minimum window width/height in proportion to workspace (0.0 - 1.0).
    proportion_min = 0.2

    ##################################### Edge #####################################

    # Margin of the tiling area ([top, right, bottom, left]).
    edge_margin = [0, 0, 0, 0]

    # Margin of the tiling area on primary screen ([top, right, bottom, left]).
    edge_margin_primary = [0, 0, 0, 0]

    # Width and height of a hot-corner area within the edge corners (0 - 100).
    edge_corner_size = 10

    # Width or height of a hot-corner area within the edge centers (0 - 100).
    edge_center_size = 100

    ################################################################################
    [colors]                             # RGBA color values used for ui elements. #
    ################################################################################

    # Layout window text color.
    gui_text = [255, 255, 255, 255]

    # Layout window background color.
    gui_background = [30, 30, 40, 255]

    # Layout slave client rectangle color.
    gui_client_slave = [58, 58, 78, 255]

    # Layout master client rectangle color.
    gui_client_master = [98, 98, 128, 255]

    # Systray icon background color.
    icon_background = [0, 0, 0, 0]

    # Systray icon foreground color.
    icon_foreground = [255, 255, 255, 255]

    ################################################################################
    [keys]                            # Key symbols can be found by running `xev`. #
    ################################################################################

    # Enable tiling on the current screen (Home = Fn_Left).
    enable = "Mod4-Home"

    # Disable tiling on the current screen (End = Fn_Right).
    disable = "Mod4-End"

    # Disable tiling and restore windows on the current screen.
    restore = "Mod4-R"

    # Toggle between enable and disable on the current screen.
    toggle = "Mod4-T"

    # Reset layouts to default proportions (BackSpace = Delete_Left)
    reset = "Mod4-BackSpace"

    # Cycles through next layouts (Next = Page_Down).
    # cycle_next = "Control-Shift-Next"

    # Cycles through previous layouts (Prior = Page_Up).
    # cycle_previous = "Control-Shift-Prior"

    # Activates the vertical-left layout (Left = Arrow_Left).
    layout_vertical_left = "Mod4-Left"

    # Activates the vertical-right layout (Right = Arrow_Right).
    layout_vertical_right = "Mod4-Right"

    # Activates the horizontal-top layout (Up = Arrow_Up).
    layout_horizontal_top = "Mod4-Up"

    # Activates the horizontal-bottom layout (Down = Arrow_Down).
    layout_horizontal_bottom = "Mod4-Down"

    # Activates the maximized layout (Space = Blank).
    layout_maximized = "Mod4-Space"

    # Activates the fullscreen layout (Return = Enter).
    layout_fullscreen = "Mod4-F"

    # Make the active window a master (KP_5 = Num_5).
    master_make = "Mod4-M"

    # Make the next window a master (KP_6 = Num_6).
    # master_make_next = "Control-Shift-KP_6"

    # Make the previous window a master (KP_4 = Num_4).
    # master_make_previous = "Control-Shift-KP_4"

    # Increase the number of masters (KP_Add = Num_+).
    master_increase = "Mod4-]"

    # Decrease the number of masters (KP_Subtract = Num_-).
    master_decrease = "Mod4-["

    # Increase the number of slaves (Plus = +).
    slave_increase = "Mod4-Plus"

    # Decrease the number of slaves (Minus = -).
    slave_decrease = "Mod4-Minus"

    # Increase the proportion of master-slave area (KP_3 = Num_3).
    proportion_increase = "Mod4-."

    # Decrease the proportion of master-slave area (KP_1 = Num_1).
    proportion_decrease = "Mod4-,"

    # Moves focus to the next window (KP_2 = Num_2).
    window_next = "Mod4-Tab"

    # Moves focus to the previous window (KP_8 = Num_8).
    window_previous = "Mod4-Shift-Tab"

    # The commands above will affect all screens if this key is pressed in addition (Mod1 = Alt_L).
    # mod_screens = "Mod1"

    # The commands above will affect all workspaces if this key is pressed in addition (Mod4 = Super_L).
    # mod_workspaces = "Mod4"

    ################################################################################
    [corners]                   # Action strings from [keys] or external commands. #
    ################################################################################

    # Corner at top left.
#    top_left = "window_previous"
    top_left = ""

    # Corner at top center.
    top_center = ""

    # Corner at top right.
#    top_right = "master_make"
    top_right = ""

    # Corner at center right.
    center_right = ""

    # Corner at bottom right.
#    bottom_right = "proportion_increase"
    bottom_right = ""

    # Corner at bottom center.
    bottom_center = ""

    # Corner at bottom left.
#    bottom_left = "proportion_decrease"
   bottom_left = ""

    # Corner at center left.
    center_left = ""

    ################################################################################
    [systray]                   # Action strings from [keys] or external commands. #
    ################################################################################

    # Icon left click with pointer.
    click_left = ""

    # Icon middle click with pointer.
#    click_middle = "toggle"
    click_middle = ""

    # Icon right click with pointer.
    click_right = ""

    # Icon vertical scroll up with pointer.
#    scroll_up = "cycle_previous"
    scroll_up = ""

    # Icon vertical scroll down with pointer.
#    scroll_down = "cycle_next"
    scroll_down = ""

    # Icon horizontal scroll left with pointer.
#    scroll_left = "proportion_decrease"
    scroll_left = ""

    # Icon horizontal scroll right with pointer.
#    scroll_right = "proportion_increase"
    scroll_right = ""
#+END_SRC
* shells and file-managers
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    ranger
    file # информация о типе файла
    mediainfo # информация о медиафайлах
    clifm
    yazi
    zoxide
    ripgrep
    fd
    rich-cli  
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
  environment.variables =  {
#      EDITOR = "emacs -nw";
#      VISUAL = "emacs";
      TERM = "xterm-256color";
      TERMCMD = "kitty";
#      PATH="$HOME/.conda/bin:$PATH";
    };


     environment.shells = [ pkgs.bashInteractive ];
    
     environment.homeBinInPath = true;
     environment.localBinInPath = true;

     environment.shellAliases =  {
      

      h = "history ";
      p = "ps -ax ";
      q = "exit";
      sdwn = "shutdown -h 0";
      lsp = "netstat -tupln";
      i = "ipython ";
      r = "ranger";
      p6 = "raku";
      c = "clifm"; 
      ffpp = "ffmpeg -i $(xclip -o -sel cli) ";
      y = "yazi";
      yt = "yt-dlp ";
      ytpp="yt-dlp $(xclip -o -sel cli) ";
      wgpp = "wget -Erkp -np -w 1 $(xclip -o -sel cli) "; 
      
      
#      ocrre = "ocrmypdf --output-type=pdfa-2  --pdfa-image-compression=jpeg -O 2  -d -c -l rus+eng --unpaper-args '--layout double' ";
#      ocrr = "ocrmypdf --output-type=pdfa-2  --pdfa-image-compression=jpeg -O 2  -d -c -l rus --unpaper-args '--layout double' ";
#      ocre = "ocrmypdf --output-type=pdfa-2  --pdfa-image-compression=jpeg -O 2  -d -c -l eng --unpaper-args '--layout double' ";
#      ocru = "ocrmypdf --output-type=pdfa-2  --pdfa-image-compression=jpeg -O 2  -d -c -l ukr --unpaper-args '--layout double' ";
#      ocrue = "ocrmypdf --output-type=pdfa-2  --pdfa-image-compression=jpeg -O 2  -d -c -l ukr+eng --unpaper-args '--layout double' ";
      p6doc = "docker run --rm -d -p 3000:3000 jjmerelo/perl6-doc ";

      nh = "nix-hash --type sha256 --base32 ";
      ns = "nix-shell ";
      nr = "sudo nixos-rebuild switch";
      nru = "sudo nixos-rebuild switch --upgrade-all";
      ne = "nix-env ";
      nei = "nix-env -iA";
      neq = "nix-env -q ";
      nee = "nix-env -e ";
      ncg = "sudo nix-collect-garbage ";

      gta = "git add ";
      gtc = "git commit ";
      gts = "git status ";
      gtgh = "git push ";
      ghgt = "git pull ";
      gtr = "git rm ";
      gtu = "git restore ";
      gpp = "git clone $(xclip -o -sel cli) ";
      
      dcu = "docker-compose up  --build -d ";
      dcd = "docker-compose down ";
      dcr = "docker-compose restart ";
      
      dps  = "docker ps -a ";
      dil = "docker image list ";
      dip = "docker image prune ";
      dir = "docker rmi ";

      ag = "alias|grep ";
      pg = "ps -ax|grep ";
      hg = "history|grep ";
      eg = "env|grep ";
    };
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC
*** ranger
**** конфиг
***** rc.conf основной конфиг
****** режим отображения и превью
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# ============================================== ==================
# Этот файл содержит команды запуска по умолчанию для рейнджера.
# Для их изменения рекомендуется создать либо /etc/ranger/rc.conf
# (для всей системы) или ~/.config/ranger/rc.conf (для каждого пользователя) и добавьте свой собственный
# команды там.
#
# Если вы скопируете туда весь этот файл, возможно, вы захотите установить среду
# Переменную RANGER_LOAD_DEFAULT_RC установите в FALSE, чтобы избежать ее двойной загрузки.
#
# Целью этого файла является определение сочетаний клавиш и настроек.
# Для запуска более сложного кода Python создайте плагин в «plugins/» или
# команда в "commands.py".
#
# Каждая строка представляет собой команду, которая будет запущена перед пользовательским интерфейсом
# инициализируется.  В результате вы не можете использовать команды, которые полагаются
# в пользовательском интерфейсе, например :delete или :mark.
# ============================================== ==================
# ===================================================================
# == Опции
# ===================================================================

# Какой режим просмотра следует использовать?  Возможные значения:
# miller: используйте столбцы Miller, которые показывают несколько уровней иерархии.
# multipane: Midnight-commander, похожий на многопанельный режим, показывает все вкладки рядом
# друг другу

set viewmode miller
#set viewmode multipane

# Сколько здесь столбцов и какова их относительная ширина?
set column_ratios 1,3,4


# Ask for a confirmation when running the "delete" command?
# Valid values are "always", "never", "multiple" (default)
# With "multiple", ranger will ask only if you delete multiple files at once.
set confirm_on_delete always

# Использовать нестандартный путь для сценария предварительного просмотра файла?
# ranger поставляется с scope.sh — сценарием, вызывающим внешние программы (см.
# README.md для зависимостей) для предварительного просмотра изображений, архивов и т. д.
set preview_script ~/.config/ranger/scope.sh

# Использовать внешний скрипт предварительного просмотра для простого текста или  изображений?
set use_preview_script true

# Используйте один из поддерживаемых протоколов предварительного просмотра изображений.
set preview_images true

# Set the preview image method. Supported methods:
#
# * w3m (default):
#   Preview images in full color with the external command "w3mimgpreview"?
#   This requires the console web browser "w3m" and a supported terminal.
#   It has been successfully tested with "xterm" and "urxvt" without tmux.
#
# * iterm2:
#   Preview images in full color using iTerm2 image previews
#   (http://iterm2.com/images.html). This requires using iTerm2 compiled
#   with image preview support.
#
#   This feature relies on the dimensions of the terminal's font.  By default, a
#   width of 8 and height of 11 are used.  To use other values, set the options
#   iterm2_font_width and iterm2_font_height to the desired values.
#
# * terminology:
#   Previews images in full color in the terminology terminal emulator.
#   Supports a wide variety of formats, even vector graphics like svg.
#
# * urxvt:
#   Preview images in full color using urxvt image backgrounds. This
#   requires using urxvt compiled with pixbuf support.
#
# * urxvt-full:
#   The same as urxvt but utilizing not only the preview pane but the
#   whole terminal window.
#
# * kitty:
#   Preview images in full color using kitty image protocol.
#   Requires python PIL or pillow library.
#   If ranger does not share the local filesystem with kitty
#   the transfer method is changed to encode the whole image;
#   while slower, this allows remote previews,
#   for example during an ssh session.
#   Tmux is unsupported.
#
# * ueberzug:
#   Preview images in full color with the external command "ueberzug".
#   Images are shown by using a child window.
#   Only for users who run X11 in GNU/Linux.


set preview_images_method kitty

# Задержка в секундах перед отображением изображения методом w3m.
# Увеличьте его в случае повреждения дисплея.
set w3m_delay 0.02

# Вручную отрегулируйте смещение w3mimg при использовании терминала, которому это необходимо.
set w3m_offset 0

# Размер шрифта iTerm2 по умолчанию (см.:view_images_method:iterm2)
set iterm2_font_width 8
set iterm2_font_height 11

# Использовать символ Юникода "..." для обозначения обрезанных имен файлов?
set unicode_ellipsis true

# Поддержка BIDI - попробуйте правильно отображать имена файлов на языках с письмом справа налево (иврит, арабский).
# Требуется пакет pip python-bidi
set bidi_support false

# Показывать точечные файлы в окне предварительного просмотра закладок?
set show_hidden_bookmarks true

# Какую цветовую схему использовать?  Эти цветовые схемы доступны по умолчанию:
# default, jungle, snow, solarized
set colorscheme default

# Предварительный просмотр файлов в крайнем правом столбце?
# И свернуть (сжать) последний столбец, если нечего просматривать?
set preview_files true
set preview_directories true
set collapse_preview true

# Переносить длинные строки в превью обычного текста?
set wrap_plaintext_previews false



# Нарисуйте строку состояния вверху окна браузера (по умолчанию: внизу)
set status_bar_on_top false

# Нарисуйте индикатор выполнения в строке состояния, который отображает среднее состояние всех
# выполняемые в данный момент задачи, которые поддерживают индикаторы выполнения?
set draw_progress_bar_in_status_bar true

# Нарисовать границы вокруг столбцов? (separators, outline, both, or none)
# Separators это вертикальные линии между столбцами.
# Outline рисует рамку вокруг всех столбцов.
# Оба объединяют два.
set draw_borders none

# Отображать имя каталога на вкладках?
set dirname_in_tabs false

# Включить поддержку мыши?
set mouse_enabled true

# Отображать размер файла в главном столбце или строке состояния?
set display_size_in_main_column true
set display_size_in_status_bar true

# Отображать свободное место на диске в строке состояния?
set display_free_space_in_status_bar true

# Отображать теги файлов во всех столбцах или только в основном столбце?
set display_tags_in_all_columns true

# Установить заголовок для окна? Обновляет как `WM_NAME`, так и `WM_ICON_NAME`.
set update_title false

# Установить имя окна tmux/screen на «ranger»?
set update_tmux_title true

# Сократить заголовок, если он станет длинным?  Число определяет, сколько
# каталогов отображаются одновременно, 0 отключает эту функцию.
set shorten_title 3

# Показать имя хоста в заголовке?
set hostname_in_titlebar false

# Сократите $HOME с помощью ~ в заголовке (первая строка) Ranger?
set tilde_in_titlebar true

# Старайтесь оставлять как можно больше места между верхней и нижней границей при прокрутке:
set scroll_offset 8

# Сбрасывать ввод после каждого нажатия клавиши?  (Заметно, когда рейнджер отстает)
set flushinput true

  
# Автоматически считать файлы в каталоге еще до их ввода?
set automatically_count_files true

# Заполнение справа, когда нет предварительного просмотра?
# Это позволяет вам щелкнуть по пространству, чтобы запустить файл.
set padding_right true

# Вы можете отобразить «реальный» совокупный размер каталогов, используя
# команда :get_cumulative_size или набрав «dc».  Размер дорогой
# вычислить и не будет обновляться автоматически.  Ты можешь выбрать
# чтобы обновить его автоматически, включив эту опцию:
set autoupdate_cumulative_size false

# Включение этого имеет смысл для программ чтения с экрана:
set show_cursor false


# Избегайте предварительного просмотра файлов, размер которых превышает этот размер в байтах.
# Используйте значение 0, чтобы отключить эту функцию.
set preview_max_size 0

# The key hint lists up to this size have their sublists expanded.
# Otherwise the submaps are replaced with "...".
set hint_collapse_threshold 10

# Добавьте выделенный файл по пути в заголовке
set show_selection_in_titlebar true

# Отключить отображение номеров строк в главном столбце.
# Possible values: false, absolute, relative.
set line_numbers false

# Когда line_numbers=relative показывает абсолютный номер строки в
# текущая строка.
set relative_current_zero false

# Начинаем номера строк с 1 вместо 0
set one_indexed false

# Включить обтекание прокрутки - перемещение вниз по последнему элементу будет оборачиваться до
# верх и наоборот.
set wrap_scroll false

# Открывать все изображения в этом каталоге при запуске определенных программ просмотра изображений.
# типа feh или sxiv?  Вы по-прежнему можете открывать выбранные файлы, отмечая их.
set open_all_images true


# Усекать длинные сообщения фиксации до этой длины, когда они отображаются в строке состояния.
set vcs_msg_length 50

# Включите это, если комбинации клавиш с клавишей Alt вам не подходят.
# (Especially on xterm)
set xterm_alt_key false

# resolution of 100ms.  Lower delay reduces lag between directory updates but
# increases CPU load.
set idle_delay 2000

#+END_SRC
******* Скрытые файлы
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# Какие файлы следует скрыть? (регулярное выражение)
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$|~$|^#.*#$

# Показать скрытые файлы? Вы можете переключить это, набрав «zh»
set show_hidden false
#+END_SRC
******* Системы контроля версий
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# Помните о системах контроля версий и отображайте информацию.
set vcs_aware false

# Состояние четырех бэкэндов git, hg, bzr, svn. Возможные состояния:
# disabled, local (only show local info), enabled (show local and remote information).
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled
#+END_SRC
******* История, закладки и cd
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# Сохранить историю консоли при выходе?
set save_console_history true

# Сколько изменений каталога или консольных команд следует хранить в истории?
set max_history_size 50
set max_console_history_size 200

# Сохранять закладки (используемые с mX и `X) мгновенно?
# Это помогает синхронизировать закладки между несколькими рейнджерами
# экземпляров, но приводит к *небольшому* снижению производительности.
# Если установлено значение false, закладки сохраняются при выходе из рейнджера.
set autosave_bookmarks true

# Сохраняем закладку "`" на диск.  Это можно использовать для переключения на последний
# каталог, набрав «``».
set save_backtick_bookmark true

# Включать ли закладки в команду cd
set cd_bookmarks true

# Изменяет чувствительность к регистру для завершения вкладки команды cd
set cd_tab_case sensitive

# Используйте нечеткое завершение табуляции с помощью команды «cd». Например,
# ":cd /u/lo/b<tab>" expands to ":cd /usr/local/bin".
set cd_tab_fuzzy true
#+END_SRC
******* Сортировка, вкладки фильтры метаданные
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# Один из: size, natural, basename, atime, ctime, mtime, type, random
set sort natural

# Дополнительные возможности сортировки
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

# Когда модуль менеджера метаданных ищет метаданные, должен ли он искать только
# файл ".metadata.json" в текущем каталоге или выполните глубокий поиск и
# также проверить все каталоги выше текущего?
set metadata_deep_search false

# Очистить все существующие фильтры при выходе из каталога
set clear_filters_on_dir_change false

# Сохраняем вкладки при выходе
set save_tabs_on_exit true

#+END_SRC
****** Локальные параметры
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# ===================================================================
# == Локальные параметры
# ===================================================================
# Вы можете установить локальные параметры, которые влияют только на один каталог.

# Examples:
setlocal path=~/Загрузки sort mtime

#+END_SRC
****** Алиасы
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes


# ===================================================================
# == Псевдонимы команд в консоли
# ===================================================================

alias e     edit
alias q     quit
alias q!    quit!
alias qa    quitall
alias qa!   quitall!
alias qall  quitall
alias qall! quitall!
alias setl  setlocal

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefklst

# ===================================================================
# == Определить клавиши для браузера
# ===================================================================
#+END_SRC
****** Клавиши основного окна
******* Базовые клавиши
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

  # Базовый
  map     Q quitall
  map     q quit
  copymap Q ZZ ZQ

  map R     reload_cwd
  map F     set freeze_files!
  map <C-r> reset
  map <C-l> redraw_window
  map <C-c> abort
  map <esc> change_mode normal
  map ~ set viewmode!

  map i display_file
  map <A-j> scroll_preview 1
  map <A-k> scroll_preview -1
  map <S-Down> scroll_preview 1
  map <S-Up> scroll_preview -1

  map ? help
  map W display_log
  map w taskview_open
  map S shell $SHELL

  map :  console
  map ;  console
  map !  console shell%space
  map @  console -p6 shell  %%s
  map #  console shell -p%space
  map s  console shell%space
  map ]  chain draw_possible_programs; console open_with%space
  map f  console find%space
  map cd console cd%space
#  map r bulkrename
  map <C-p> chain console; eval fm.ui.console.history_move(-1)
#+END_SRC
******* Управление строкой состояния
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Изменить режим линии
map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mh linemode humanreadablemtime
map Mp linemode permissions
map Ms linemode sizemtime
map MH linemode sizehumanreadablemtime
map Mt linemode metatitle

#+END_SRC
******* Отметка файлов
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Маркировка/маркировка
map t       tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True
#+END_SRC
******* Привязки клавиш как в других програмах
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Для ностальгирующих: привязки Midnight Commander
map <F1> help
map <F2> rename_append
map <F3> display_file
map <F4> edit
map <F5> copy
map <F6> cut
map <F7> console mkdir%space
map <F8> console delete
map <F8> console trash
map <F10> exit

# Если вы работаете на клавиатуре с раскладкой дворжака
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
#map <DELETE>   console delete
map <INSERT>   console touch%space

# VIM-подобный
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>
#+END_SRC
******* Быстрое перемещение по каталогам
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Прыгаем вокруг
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse
map {     traverse_backwards
map )     jump_non

map gh cd ~
map ge cd /etc
map gu cd /usr
map gd cd /dev
map gl cd -r .
map gL cd -r %f
map go cd /opt
map gv cd /var
map gm cd /media
map gi eval fm.cd('/run/media/' + os.getenv('USER'))
map gM cd /mnt
map gs cd /srv
map gp cd /tmp
map gr cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map g? cd /usr/share/doc/ranger
#+END_SRC
******* Внешние программы
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Внешние программы
map e  edit
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map yp yank path
map yd yank dir
map yn yank name
map y. yank name_without_extension

#+END_SRC
******* Операции з файловой системой
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Операции с файловой системой
map =  chmod
# Сгенерируйте все привязки chmod с помощью Python:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))


map cw console rename%space
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree
map pd console paste dest=
map p`<any> paste dest=%any_path
map p'<any> paste dest=%any_path

map dD console delete
map dT console trash
map x delete
map X trash
map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle
#+END_SRC
*******  Временные обходные пути
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# Временные обходные пути
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)
#+END_SRC
******* Поиск
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
#  поиск
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime
#+END_SRC
******* Вкладки
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Вкладки
map <C-n>     tab_new
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map gt        tab_move 1
map gT        tab_move -1
map gn        tab_new
map gc        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map <a-r>     tab_shift 1
map <a-l>     tab_shift -1
#+END_SRC
******** Сортировка
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Сортировка
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

map dc get_cumulative_size
#+END_SRC
********* Настройки (изменение отображения и поведения)
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes
# Настройки
map zc    set collapse_preview!
map zd    set sort_directories_first!
map zh    set show_hidden!
map <C-h> set show_hidden!
copymap <C-h> <backspace>
copymap <backspace> <backspace2>
map zI    set flushinput!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zP    set preview_directories!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!
map zf    console filter%space
copymap zf zz
#+END_SRC

******** Стек фильтров
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Стек фильтров
map .d filter_stack add type d
map .f filter_stack add type f
map .l filter_stack add type l
map .m console filter_stack add mime%space
map .n console filter_stack add name%space
map .# console filter_stack add hash%space
map ." filter_stack add duplicate
map .' filter_stack add unique
map .| filter_stack add or
map .& filter_stack add and
map .! filter_stack add not
map .r filter_stack rotate
map .c filter_stack clear
map .* filter_stack decompose
map .p filter_stack pop
map .. filter_stack show

#+END_SRC
******** Закладки
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# Закладки
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>
#+END_SRC

****** Клавиши консоли
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# ===================================================================
# == Определить клавиши для консоли
# ===================================================================
# Примечание. Несопоставленные клавиши передаются непосредственно в консоль.

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Двигайтесь
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b> eval fm.ui.console.move_word(left=1)
cmap <a-f> eval fm.ui.console.move_word(right=1)

copycmap <a-b> <a-left>
copycmap <a-f> <a-right>

# Редактирование строк
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# И, конечно же, способ emacs
copycmap <ESC>       <C-g>
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# Примечание. Существует несколько способов выражения символов возврата.  <backspace> (код 263)
# и <backspace2> (код 127).  Чтобы быть уверенным, используйте оба.
copycmap <backspace> <backspace2>

# Это специальное выражение позволяет вводить цифры:
cmap <allow_quantifiers> false
#+END_SRC
****** Клавиши просмотрщика
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# ===================================================================
# == Сочетания клавиш пейджера
# ===================================================================

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# Базовый
pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

#+END_SRC

****** Клавиши окна задач
#+BEGIN_SRC text :tangle ~/.config/ranger/rc.conf  :mkdirp yes

# ===================================================================
# == Сочетания клавиш представления задач
# ===================================================================

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Изменение приоритета и удаление задач
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Базовый
tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>
#+END_SRC
***** rifle.conf запуск програм
#+BEGIN_SRC text :tangle  ~/.config/ranger/rifle.conf :mkdirp yes
# vim: ft=cfg
#
# Это файл конфигурации riffle, исполнителя/открывателя файлов рейнджера.
# Каждая строка состоит из условий и команды.  Для каждой строки условия
# проверяются, и если они выполняются, выполняется соответствующая команда.#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# The command can contain these environment variables:
#   $1-$9 | The n-th selected file
#   $@    | All selected files
#
# Если вы используете специальную команду «ask», riffle спросит вас, какую программу запустить.
#
# Префикс условия с помощью "!" сведет на нет его результат.
# В настоящее время поддерживаются следующие условия:
#   match <regexp> | Регулярное выражение соответствует $1
#   ext <regexp>   | Регулярное выражение соответствует расширению $1.
#   mime <regexp>  | Регулярное выражение соответствует типу MIME $1.
#   name <regexp>  | Регулярное выражение соответствует базовому имени $1.
#   path <regexp>  | Регулярное выражение соответствует абсолютному пути к $1.
#   has <program>  | Программа установлена ​​(т.е. находится в $PATH)
#   env <variable> | Переменная среды "variable" не пуста.
#   file           | $1 это файл
#   directory      | $1 это каталог
#   number <n>     | измените номер этой команды на n
#   terminal       | stdin, stderr и stdout подключены к терминалу
#   X              | Доступна графическая среда (darwin, Xorg или Wayland).
#
# Существуют также псевдоусловия, имеющие «побочный эффект»:
#   flag <flags>  | Измените способ запуска программы. См. ниже.
#   label <label> | Присвойте команде метку или имя, чтобы она могла
#                 | начать с :open_with <label> в Ranger
#                 | или `rifle -p <label>` в автономном исполняемом файле.
#   else          | Всегда правда.
#
# Флаги — это отдельные символы, которые слегка преобразуют команду:
#   f | Форкните программу, заставьте ее работать в фоновом режиме.
#     |   New command = setsid $command >& /dev/null &
#   r | Выполните команду с правами root
#     |   New command = sudo $command
#   t | Запустите программу в новом терминале.  Если $TERMCMD не определен,
#     | riffle попытается извлечь его из $TERM.
#     |   New command = $TERMCMD -e $command
# Примечание: «Новая команда» служит лишь иллюстрацией, точной
# реализация может отличаться.
# Примечание: при использовании riffle в рейнджере есть дополнительный флаг «c» для
# запускаем только текущий файл, даже если вы отметили несколько файлов.

#-------------------------------------------
# веб-сайты
#-------------------------------------------
# Редко устанавливаемые браузеры получают более высокий приоритет; Предполагается, что если вы
# установите редкий браузер, вы наверняка им пользуетесь.  Firefox/konqueror/w3m на
# другие часто устанавливаются только в качестве резервных браузеров.
ext x?html?, has surf,             X, flag f = surf -- file://"$1"
ext x?html?, has vimprobable,      X, flag f = vimprobable -- "$@"
ext x?html?, has vimprobable2,     X, flag f = vimprobable2 -- "$@"
ext x?html?, has qutebrowser,      X, flag f = qutebrowser -- "$@"
ext x?html?, has dwb,              X, flag f = dwb -- "$@"
ext x?html?, has jumanji,          X, flag f = jumanji -- "$@"
ext x?html?, has luakit,           X, flag f = luakit -- "$@"
ext x?html?, has uzbl,             X, flag f = uzbl -- "$@"
ext x?html?, has uzbl-tabbed,      X, flag f = uzbl-tabbed -- "$@"
ext x?html?, has uzbl-browser,     X, flag f = uzbl-browser -- "$@"
ext x?html?, has uzbl-core,        X, flag f = uzbl-core -- "$@"
ext x?html?, has midori,           X, flag f = midori -- "$@"
ext x?html?, has opera,            X, flag f = opera -- "$@"
ext x?html?, has firefox,          X, flag f = firefox -- "$@"
ext x?html?, has seamonkey,        X, flag f = seamonkey -- "$@"
ext x?html?, has iceweasel,        X, flag f = iceweasel -- "$@"
ext x?html?, has chromium-browser, X, flag f = chromium-browser -- "$@"
ext x?html?, has chromium,         X, flag f = chromium -- "$@"
ext x?html?, has google-chrome,    X, flag f = google-chrome -- "$@"
ext x?html?, has epiphany,         X, flag f = epiphany -- "$@"
ext x?html?, has konqueror,        X, flag f = konqueror -- "$@"
ext x?html?, has elinks,            terminal = elinks "$@"
ext x?html?, has links2,            terminal = links2 "$@"
ext x?html?, has links,             terminal = links "$@"
ext x?html?, has lynx,              terminal = lynx -- "$@"
ext x?html?, has w3m,               terminal = w3m "$@"

#-------------------------------------------
# Разное
#-------------------------------------------
# Определите «редактор» для текстовых файлов в качестве первого действия
ext org,   = emacsclient -c  -- "$@"
mime ^text,  label editor = ${VISUAL:-$EDITOR} -- "$@"
mime ^text,  label pager  = "$PAGER" -- "$@"
!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} -- "$@"
!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"

ext 1                         = man "$1"
ext s[wmf]c, has zsnes, X     = zsnes "$1"
ext s[wmf]c, has snes9x-gtk,X = snes9x-gtk "$1"
ext nes, has fceux, X         = fceux "$1"
ext exe                       = wine "$1"
name ^[mM]akefile$            = make


ext torrent, X, flag t = aria2c -c -- "$@"



#--------------------------------------------
# Скрипты
#-------------------------------------------
ext py  = python -- "$1"
ext pl  = perl -- "$1"
ext rb  = ruby -- "$1"
ext js  = node -- "$1"
ext sh  = sh -- "$1"
ext php = php -- "$1"

#--------------------------------------------
# Аудио без X
#-------------------------------------------
mime ^audio|ogg$, terminal, has mpv      = mpv -- "$@"
mime ^audio|ogg$, terminal, has mplayer2 = mplayer2 -- "$@"
mime ^audio|ogg$, terminal, has mplayer  = mplayer -- "$@"
ext midi?,        terminal, has wildmidi = wildmidi -- "$@"

#--------------------------------------------
# Видео/аудио с графическим интерфейсом
#-------------------------------------------
mime ^video|audio, has gmplayer, X, flag f = gmplayer -- "$@"
mime ^video|audio, has smplayer, X, flag f = smplayer "$@"
mime ^video,       has mpv,      X, flag f = mpv -- "$@"
mime ^video,       has mpv,      X, flag f = mpv --fs -- "$@"
mime ^video,       has mplayer2, X, flag f = mplayer2 -- "$@"
mime ^video,       has mplayer2, X, flag f = mplayer2 -fs -- "$@"
mime ^video,       has mplayer,  X, flag f = mplayer -- "$@"
mime ^video,       has mplayer,  X, flag f = mplayer -fs -- "$@"
mime ^video|audio, has vlc,      X, flag f = vlc -- "$@"
mime ^video|audio, has totem,    X, flag f = totem -- "$@"
mime ^video|audio, has totem,    X, flag f = totem --fullscreen -- "$@"

#--------------------------------------------
# Видео без X
#-------------------------------------------
mime ^video, terminal, !X, has mpv       = mpv -- "$@"
mime ^video, terminal, !X, has mplayer2  = mplayer2 -- "$@"
mime ^video, terminal, !X, has mplayer   = mplayer -- "$@"


#-------------------------------------------
# Документы
#-------------------------------------------

ext pdf, has zathura,  X, flag f = zathura -- "$@"
ext pdf, has llpp,     X, flag f = llpp "$@"
ext pdf, has mupdf,    X, flag f = mupdf "$@"
ext pdf, has mupdf-x11,X, flag f = mupdf-x11 "$@"
ext pdf, has apvlv,    X, flag f = apvlv -- "$@"
ext pdf, has xpdf,     X, flag f = xpdf -- "$@"
ext pdf, has evince,   X, flag f = evince -- "$@"
ext pdf, has atril,    X, flag f = atril -- "$@"
ext pdf, has okular,   X, flag f = okular -- "$@"
ext pdf, has epdfview, X, flag f = epdfview -- "$@"
ext pdf, has qpdfview, X, flag f = qpdfview "$@"
ext pdf, has open,     X, flag f = open "$@"

ext docx?, has catdoc,       terminal = catdoc -- "$@" | "$PAGER"

ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has gnumeric,    X, flag f = gnumeric -- "$@"
ext                        sxc|xlsx?|xlt|xlw|gnm|gnumeric, has kspread,     X, flag f = kspread -- "$@"
ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoffice "$@"
ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has soffice,     X, flag f = soffice "$@"
ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has ooffice,     X, flag f = ooffice "$@"

ext djvu, has zathura,X, flag f = zathura -- "$@"
ext djvu, has evince, X, flag f = evince -- "$@"
ext djvu, has atril,  X, flag f = atril -- "$@"
ext djvu, has djview, X, flag f = djview -- "$@"

ext epub, has zathura,      X, flag f = zathura -- "$@"
ext epub, has ebook-viewer, X, flag f = ebook-viewer -- "$@"
ext epub, has mupdf,        X, flag f = mupdf -- "$@"
ext mobi, has ebook-viewer, X, flag f = ebook-viewer -- "$@"

ext cbr,  has zathura,      X, flag f = zathura -- "$@"
ext cbz,  has zathura,      X, flag f = zathura -- "$@"

#-------------------------------------------
# Images
#-------------------------------------------
mime ^image/svg, has inkscape, X, flag f = inkscape -- "$@"
mime ^image/svg, has display,  X, flag f = display -- "$@"

mime ^image, has imv,       X, flag f = imv -- "$@"
mime ^image, has pqiv,      X, flag f = pqiv -- "$@"
mime ^image, has sxiv,      X, flag f = sxiv -- "$@"
mime ^image, has feh,       X, flag f = feh -- "$@"
mime ^image, has mirage,    X, flag f = mirage -- "$@"
mime ^image, has ristretto, X, flag f = ristretto "$@"
mime ^image, has eog,       X, flag f = eog -- "$@"
mime ^image, has eom,       X, flag f = eom -- "$@"
mime ^image, has nomacs,    X, flag f = nomacs -- "$@"
mime ^image, has geeqie,    X, flag f = geeqie -- "$@"
mime ^image, has gpicview,  X, flag f = gpicview -- "$@"
mime ^image, has gwenview,  X, flag f = gwenview -- "$@"
mime ^image, has gimp,      X, flag f = gimp -- "$@"
ext xcf,                    X, flag f = gimp -- "$@"

#-------------------------------------------
# Архивы
#-------------------------------------------

# избегайте запроса пароля, указывая пустой пароль
ext 7z, has 7z = 7z -p l "$@" | "$PAGER"
# Для этого требуется инструмент
ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     has atool = atool --list --each -- "$@" | "$PAGER"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --list --each -- "$@" | "$PAGER"
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  has atool = atool --extract --each -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, has atool = atool --extract --each -- "$@"

# Листинг и извлечение архивов без инструмента:
ext tar|gz|bz2|xz, has tar = tar vvtf "$1" | "$PAGER"
ext tar|gz|bz2|xz, has tar = for file in "$@"; do tar vvxf "$file"; done
ext bz2, has bzip2 = for file in "$@"; do bzip2 -dk "$file"; done
ext zip, has unzip = unzip -l "$1" | less
ext zip, has unzip = for file in "$@"; do unzip -d "${file%.*}" "$file"; done
ext ace, has unace = unace l "$1" | less
ext ace, has unace = for file in "$@"; do unace e "$file"; done
ext rar, has unrar = unrar l "$1" | less
ext rar, has unrar = for file in "$@"; do unrar x "$file"; done

#-------------------------------------------
# Шрифты
#-------------------------------------------
mime ^font, has fontforge, X, flag f = fontforge "$@"

#-------------------------------------------
# Флаг t резервных терминалов
#-------------------------------------------
# Редко устанавливаемые эмуляторы терминала получают более высокий приоритет; Предполагается, что
# если вы устанавливаете редкий эмулятор терминала, вы, вероятно, используете его.
# gnome-terminal/konsole/xterm, с другой стороны, часто устанавливаются как часть
# среду рабочего стола или резервные эмуляторы терминала.
mime ^ranger/x-terminal-emulator, has terminology = terminology -e "$@"
mime ^ranger/x-terminal-emulator, has kitty = kitty -- "$@"
mime ^ranger/x-terminal-emulator, has alacritty = alacritty -e "$@"
mime ^ranger/x-terminal-emulator, has sakura = sakura -e "$@"
mime ^ranger/x-terminal-emulator, has lilyterm = lilyterm -e "$@"
#mime ^ranger/x-terminal-emulator, has cool-retro-term = cool-retro-term -e "$@"
mime ^ranger/x-terminal-emulator, has termite = termite -x '"$@"'
#mime ^ranger/x-terminal-emulator, has yakuake = yakuake -e "$@"
mime ^ranger/x-terminal-emulator, has guake = guake -ne "$@"
mime ^ranger/x-terminal-emulator, has tilda = tilda -c "$@"
mime ^ranger/x-terminal-emulator, has st = st -e "$@"
mime ^ranger/x-terminal-emulator, has terminator = terminator -x "$@"
mime ^ranger/x-terminal-emulator, has urxvt = urxvt -e "$@"
mime ^ranger/x-terminal-emulator, has pantheon-terminal = pantheon-terminal -e "$@"
mime ^ranger/x-terminal-emulator, has lxterminal = lxterminal -e "$@"
mime ^ranger/x-terminal-emulator, has mate-terminal = mate-terminal -x "$@"
mime ^ranger/x-terminal-emulator, has xfce4-terminal = xfce4-terminal -x "$@"
mime ^ranger/x-terminal-emulator, has konsole = konsole -e "$@"
mime ^ranger/x-terminal-emulator, has gnome-terminal = gnome-terminal -- "$@"
mime ^ranger/x-terminal-emulator, has xterm = xterm -e "$@"

#-------------------------------------------
# Разное
#-------------------------------------------
label wallpaper, number 11, mime ^image, has feh, X = feh --bg-scale "$1"
label wallpaper, number 12, mime ^image, has feh, X = feh --bg-tile "$1"
label wallpaper, number 13, mime ^image, has feh, X = feh --bg-center "$1"
label wallpaper, number 14, mime ^image, has feh, X = feh --bg-fill "$1"

#-------------------------------------------
# Общие средства открытия файлов
#-------------------------------------------
label open, has xdg-open = xdg-open -- "$@"
label open, has open     = open -- "$@"

# Определить редактор нетекстовых файлов + пейджер в качестве последнего действия
              !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = ask
label editor, !mime ^text, !ext org|xml|json|csv|tex|py|pl|rb|js|sh|php  = ${VISUAL:-$EDITOR} -- "$@"
label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php  = "$PAGER" -- "$@"



######################################################################
# Действия ниже намеренно оставлены в этом файле так низко, поэтому #
# они никогда не срабатывают случайно.                             #
######################################################################

# Execute a file as program/script.
mime application/x-executable = "$1"

# Переместите файл в корзину с помощью dump-cli.
label trash, has trash-put = trash-put -- "$@"
label trash = mkdir -p -- ${XDG_DATA_DIR:-$HOME/.ranger}/ranger-trash; mv -- "$@" ${XDG_DATA_DIR:-$HOME/.ranger}/ranger-trash

#+END_SRC
***** scope.sh просмотршик
#+BEGIN_SRC bash  :tangle  ~/.config/ranger/scope.sh :mkdirp yes :tangle-mode "a+x"
   #!/usr/bin/env bash

   set -o noclobber -o noglob -o nounset -o pipefail
   IFS=$'\n'

   ## If the option `use_preview_script` is set to `true`,
   ## then this script will be called and its output will be displayed in ranger.
   ## ANSI color codes are supported.
   ## STDIN is disabled, so interactive scripts won't work properly

   ## This script is considered a configuration file and must be updated manually.
   ## It will be left untouched if you upgrade ranger.

   ## Because of some automated testing we do on the script #'s for comments need
   ## to be doubled up. Code that is commented out, because it's an alternative for
   ## example, gets only one #.

   ## Meanings of exit codes:
   ## code | meaning    | action of ranger
   ## -----+------------+-------------------------------------------
   ## 0    | success    | Display stdout as preview
   ## 1    | no preview | Display no preview at all
   ## 2    | plain text | Display the plain content of the file
   ## 3    | fix width  | Don't reload when width changes
   ## 4    | fix height | Don't reload when height changes
   ## 5    | fix both   | Don't ever reload
   ## 6    | image      | Display the image `$IMAGE_CACHE_PATH` points to as an image preview
   ## 7    | image      | Display the file directly as an image

   ## Script arguments
   FILE_PATH="${1}"         # Full path of the highlighted file
   PV_WIDTH="${2}"          # Width of the preview pane (number of fitting characters)
   ## shellcheck disable=SC2034 # PV_HEIGHT is provided for convenience and unused
   PV_HEIGHT="${3}"         # Height of the preview pane (number of fitting characters)
   IMAGE_CACHE_PATH="${4}"  # Full path that should be used to cache image preview
   PV_IMAGE_ENABLED="${5}"  # 'True' if image previews are enabled, 'False' otherwise.

   FILE_EXTENSION="${FILE_PATH##*.}"
   FILE_EXTENSION_LOWER="$(printf "%s" "${FILE_EXTENSION}" | tr '[:upper:]' '[:lower:]')"

   ## Settings
   HIGHLIGHT_SIZE_MAX=262143  # 256KiB
   HIGHLIGHT_TABWIDTH="${HIGHLIGHT_TABWIDTH:-8}"
   HIGHLIGHT_STYLE="${HIGHLIGHT_STYLE:-pablo}"
   HIGHLIGHT_OPTIONS="--replace-tabs=${HIGHLIGHT_TABWIDTH} --style=${HIGHLIGHT_STYLE} ${HIGHLIGHT_OPTIONS:-}"
   PYGMENTIZE_STYLE="${PYGMENTIZE_STYLE:-autumn}"
   BAT_STYLE="${BAT_STYLE:-plain}"
   OPENSCAD_IMGSIZE="${RNGR_OPENSCAD_IMGSIZE:-1000,1000}"
   OPENSCAD_COLORSCHEME="${RNGR_OPENSCAD_COLORSCHEME:-Tomorrow Night}"
   SQLITE_TABLE_LIMIT=20  # Display only the top <limit> tables in database, set to 0 for no exhaustive preview (only the sqlite_master table is displayed).
   SQLITE_ROW_LIMIT=5     # Display only the first and the last (<limit> - 1) records in each table, set to 0 for no limits.

   handle_extension() {
       case "${FILE_EXTENSION_LOWER}" in
	   ## Archive
	   a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|\
	   rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)
	       atool --list -- "${FILE_PATH}" && exit 5
	       bsdtar --list --file "${FILE_PATH}" && exit 5
	       exit 1;;
	   rar)
	       ## Avoid password prompt by providing empty password
	       unrar lt -p- -- "${FILE_PATH}" && exit 5
	       exit 1;;
	   7z)
	       ## Avoid password prompt by providing empty password
	       7z l -p -- "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## PDF
	   pdf)
	       ## Preview as text conversion
	       pdftotext -l 10 -nopgbrk -q -- "${FILE_PATH}" - | \
		 fmt -w "${PV_WIDTH}" && exit 5
	       mutool draw -F txt -i -- "${FILE_PATH}" 1-10 | \
		 fmt -w "${PV_WIDTH}" && exit 5
	       exiftool "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## BitTorrent
	   torrent)
	       aria2c -S -- "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## OpenDocument
	   odt|sxw)
	       ## Preview as text conversion
	       odt2txt "${FILE_PATH}" && exit 5
	       ## Preview as markdown conversion
	       pandoc -s -t markdown -- "${FILE_PATH}" && exit 5
	       exit 1;;
	   ods|odp)
	       ## Preview as text conversion (unsupported by pandoc for markdown)
	       odt2txt "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## XLSX
	   xlsx)
	       ## Preview as csv conversion
	       ## Uses: https://github.com/dilshod/xlsx2csv
	       xlsx2csv -- "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## HTML
	   htm|html|xhtml)
	       ## Preview as text conversion
	       w3m -dump "${FILE_PATH}" && exit 5
	       lynx -dump -- "${FILE_PATH}" && exit 5
	       elinks -dump "${FILE_PATH}" && exit 5
   #            pandoc -s -t markdown -- "${FILE_PATH}" && exit 5
	       ;;

	   ## JSON
	   json)
	       jq --color-output . "${FILE_PATH}" && exit 5
	       python -m json.tool -- "${FILE_PATH}" && exit 5
	       ;;

	   ## Jupyter Notebooks
	   ipynb)
	       jupyter nbconvert --to markdown "${FILE_PATH}" --stdout | env COLORTERM=8bit bat --color=always --style=plain --language=markdown && exit 5
	       jupyter nbconvert --to markdown "${FILE_PATH}" --stdout && exit 5
	       jq --color-output . "${FILE_PATH}" && exit 5
	       python -m json.tool -- "${FILE_PATH}" && exit 5
	       ;;

	   ## Direct Stream Digital/Transfer (DSDIFF) and wavpack aren't detected
	   ## by file(1).
	   dff|dsf|wv|wvc)
	       mediainfo "${FILE_PATH}" && exit 5
	       exiftool "${FILE_PATH}" && exit 5
	       ;; # Continue with next handler on failure
       esac
   }

   handle_image() {
       ## Size of the preview if there are multiple options or it has to be
       ## rendered from vector graphics. If the conversion program allows
       ## specifying only one dimension while keeping the aspect ratio, the width
       ## will be used.
       local DEFAULT_SIZE="1920x1080"

       local mimetype="${1}"
       case "${mimetype}" in
	   ## SVG
	   image/svg+xml|image/svg)
	       rsvg-convert --keep-aspect-ratio --width "${DEFAULT_SIZE%x*}" "${FILE_PATH}" -o "${IMAGE_CACHE_PATH}.png" \
		   && mv "${IMAGE_CACHE_PATH}.png" "${IMAGE_CACHE_PATH}" \
		   && exit 6
	       exit 1;;

	   ## DjVu
	   image/vnd.djvu)
	       ddjvu -format=tiff -quality=90 -page=1 -size="${DEFAULT_SIZE}" \
		     - "${IMAGE_CACHE_PATH}" < "${FILE_PATH}" \
		     && exit 6 || exit 1;;

	   ## Image
	   image/*)
	       local orientation
	       orientation="$( identify -format '%[EXIF:Orientation]\n' -- "${FILE_PATH}" )"
	       ## If orientation data is present and the image actually
	       ## needs rotating ("1" means no rotation)...
	       if [[ -n "$orientation" && "$orientation" != 1 ]]; then
		   ## ...auto-rotate the image according to the EXIF data.
		   convert -- "${FILE_PATH}" -auto-orient "${IMAGE_CACHE_PATH}" && exit 6
	       fi

	       ## `w3mimgdisplay` will be called for all images (unless overridden
	       ## as above), but might fail for unsupported types.
	       exit 7;;

	   ## Video
	    video/*)
	        # Get embedded thumbnail
#	        ffmpeg -i "${FILE_PATH}" -map 0:v -map -0:V -c copy "${IMAGE_CACHE_PATH}" && exit 6
	        # Get frame 10% into video
	        ffmpegthumbnailer -i "${FILE_PATH}" -o "${IMAGE_CACHE_PATH}" -s 0 && exit 6
	        exit 1;;

	   ## Audio
	   # audio/*)
	   #     # Get embedded thumbnail
	   #     ffmpeg -i "${FILE_PATH}" -map 0:v -map -0:V -c copy \
	   #       "${IMAGE_CACHE_PATH}" && exit 6;;

	   ## PDF
	   # application/pdf)
	   #     pdftoppm -f 1 -l 1 \
	   #              -scale-to-x "${DEFAULT_SIZE%x*}" \
	   #              -scale-to-y -1 \
	   #              -singlefile \
	   #              -jpeg -tiffcompression jpeg \
	   #              -- "${FILE_PATH}" "${IMAGE_CACHE_PATH%.*}" \
	   #         && exit 6 || exit 1;;


	   ## ePub, MOBI, FB2 (using Calibre)
	   # application/epub+zip|application/x-mobipocket-ebook|\
	   # application/x-fictionbook+xml)
	   #     # ePub (using https://github.com/marianosimone/epub-thumbnailer)
	   #     epub-thumbnailer "${FILE_PATH}" "${IMAGE_CACHE_PATH}" \
	   #         "${DEFAULT_SIZE%x*}" && exit 6
	   #     ebook-meta --get-cover="${IMAGE_CACHE_PATH}" -- "${FILE_PATH}" \
	   #         >/dev/null && exit 6
	   #     exit 1;;

	   ## Font
	   application/font*|application/*opentype)
	       preview_png="/tmp/$(basename "${IMAGE_CACHE_PATH%.*}").png"
	       if fontimage -o "${preview_png}" \
			    --pixelsize "120" \
			    --fontname \
			    --pixelsize "80" \
			    --text "  ABCDEFGHIJKLMNOPQRSTUVWXYZ  " \
			    --text "  abcdefghijklmnopqrstuvwxyz  " \
			    --text "  0123456789.:,;(*!?') ff fl fi ffi ffl  " \
			    --text "  The quick brown fox jumps over the lazy dog.  " \
			    "${FILE_PATH}";
	       then
		   convert -- "${preview_png}" "${IMAGE_CACHE_PATH}" \
		       && rm "${preview_png}" \
		       && exit 6
	       else
		   exit 1
	       fi
	       ;;

	   ## Preview archives using the first image inside.
	   ## (Very useful for comic book collections for example.)
	   # application/zip|application/x-rar|application/x-7z-compressed|\
	   #     application/x-xz|application/x-bzip2|application/x-gzip|application/x-tar)
	   #     local fn=""; local fe=""
	   #     local zip=""; local rar=""; local tar=""; local bsd=""
	   #     case "${mimetype}" in
	   #         application/zip) zip=1 ;;
	   #         application/x-rar) rar=1 ;;
	   #         application/x-7z-compressed) ;;
	   #         *) tar=1 ;;
	   #     esac
	   #     { [ "$tar" ] && fn=$(tar --list --file "${FILE_PATH}"); } || \
	   #     { fn=$(bsdtar --list --file "${FILE_PATH}") && bsd=1 && tar=""; } || \
	   #     { [ "$rar" ] && fn=$(unrar lb -p- -- "${FILE_PATH}"); } || \
	   #     { [ "$zip" ] && fn=$(zipinfo -1 -- "${FILE_PATH}"); } || return
	   #
	   #     fn=$(echo "$fn" | python -c "from __future__ import print_function; \
	   #             import sys; import mimetypes as m; \
	   #             [ print(l, end='') for l in sys.stdin if \
	   #               (m.guess_type(l[:-1])[0] or '').startswith('image/') ]" |\
	   #         sort -V | head -n 1)
	   #     [ "$fn" = "" ] && return
	   #     [ "$bsd" ] && fn=$(printf '%b' "$fn")
	   #
	   #     [ "$tar" ] && tar --extract --to-stdout \
	   #         --file "${FILE_PATH}" -- "$fn" > "${IMAGE_CACHE_PATH}" && exit 6
	   #     fe=$(echo -n "$fn" | sed 's/[][*?\]/\\\0/g')
	   #     [ "$bsd" ] && bsdtar --extract --to-stdout \
	   #         --file "${FILE_PATH}" -- "$fe" > "${IMAGE_CACHE_PATH}" && exit 6
	   #     [ "$bsd" ] || [ "$tar" ] && rm -- "${IMAGE_CACHE_PATH}"
	   #     [ "$rar" ] && unrar p -p- -inul -- "${FILE_PATH}" "$fn" > \
	   #         "${IMAGE_CACHE_PATH}" && exit 6
	   #     [ "$zip" ] && unzip -pP "" -- "${FILE_PATH}" "$fe" > \
	   #         "${IMAGE_CACHE_PATH}" && exit 6
	   #     [ "$rar" ] || [ "$zip" ] && rm -- "${IMAGE_CACHE_PATH}"
	   #     ;;
       esac

       # openscad_image() {
       #     TMPPNG="$(mktemp -t XXXXXX.png)"
       #     openscad --colorscheme="${OPENSCAD_COLORSCHEME}" \
       #         --imgsize="${OPENSCAD_IMGSIZE/x/,}" \
       #         -o "${TMPPNG}" "${1}"
       #     mv "${TMPPNG}" "${IMAGE_CACHE_PATH}"
       # }

       case "${FILE_EXTENSION_LOWER}" in
	  ## 3D models
	  ## OpenSCAD only supports png image output, and ${IMAGE_CACHE_PATH}
	  ## is hardcoded as jpeg. So we make a tempfile.png and just
	  ## move/rename it to jpg. This works because image libraries are
	  ## smart enough to handle it.
	  # csg|scad)
	  #     openscad_image "${FILE_PATH}" && exit 6
	  #     ;;
	  # 3mf|amf|dxf|off|stl)
	  #     openscad_image <(echo "import(\"${FILE_PATH}\");") && exit 6
	  #     ;;
	  drawio)
	      draw.io -x "${FILE_PATH}" -o "${IMAGE_CACHE_PATH}" \
		  --width "${DEFAULT_SIZE%x*}" && exit 6
	      exit 1;;
       esac
   }

   handle_mime() {
       local mimetype="${1}"
       case "${mimetype}" in
	   ## RTF and DOC
	   text/rtf|*msword)
	       ## Preview as text conversion
	       ## note: catdoc does not always work for .doc files
	       ## catdoc: http://www.wagner.pp.ru/~vitus/software/catdoc/
	       catdoc -- "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## DOCX, ePub, FB2 (using markdown)
	   ## You might want to remove "|epub" and/or "|fb2" below if you have
	   ## uncommented other methods to preview those formats
	   ,*wordprocessingml.document|*/epub+zip|*/x-fictionbook+xml)
	     epub2txt -- "${FILE_PATH}" && exit 5
	       ## Preview as markdown conversion
#	       head -n1000  -- "${FILE_PATH}"|pandoc -s -t markdown && exit 5
	       exit 1;;

	   ## E-mails
	   message/rfc822)
	       ## Parsing performed by mu: https://github.com/djcb/mu
	       mu view -- "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## XLS
	   ,*ms-excel)
	       ## Preview as csv conversion
	       ## xls2csv comes with catdoc:
	       ##   http://www.wagner.pp.ru/~vitus/software/catdoc/
	       xls2csv -- "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## SQLite
	   ,*sqlite3)
	       ## Preview as text conversion
	       sqlite_tables="$( sqlite3 "file:${FILE_PATH}?mode=ro" '.tables' )" \
		   || exit 1
	       [ -z "${sqlite_tables}" ] &&
		   { echo "Empty SQLite database." && exit 5; }
	       sqlite_show_query() {
		   sqlite-utils query "${FILE_PATH}" "${1}" --table --fmt fancy_grid \
		   || sqlite3 "file:${FILE_PATH}?mode=ro" "${1}" -header -column
	       }
	       ## Display basic table information
	       sqlite_rowcount_query="$(
		   sqlite3 "file:${FILE_PATH}?mode=ro" -noheader \
		       'SELECT group_concat(
			   "SELECT """ || name || """ AS tblname,
					     count(*) AS rowcount
			    FROM " || name,
			   " UNION ALL "
		       )
		       FROM sqlite_master
		       WHERE type="table" AND name NOT LIKE "sqlite_%";'
	       )"
	       sqlite_show_query \
		   "SELECT tblname AS 'table', rowcount AS 'count',
		   (
		       SELECT '(' || group_concat(name, ', ') || ')'
		       FROM pragma_table_info(tblname)
		   ) AS 'columns',
		   (
		       SELECT '(' || group_concat(
			   upper(type) || (
			       CASE WHEN pk > 0 THEN ' PRIMARY KEY' ELSE '' END
			   ),
			   ', '
		       ) || ')'
		       FROM pragma_table_info(tblname)
		   ) AS 'types'
		   FROM (${sqlite_rowcount_query});"
	       if [ "${SQLITE_TABLE_LIMIT}" -gt 0 ] &&
		  [ "${SQLITE_ROW_LIMIT}" -ge 0 ]; then
		   ## Do exhaustive preview
		   echo && printf '>%.0s' $( seq "${PV_WIDTH}" ) && echo
		   sqlite3 "file:${FILE_PATH}?mode=ro" -noheader \
		       "SELECT name FROM sqlite_master
		       WHERE type='table' AND name NOT LIKE 'sqlite_%'
		       LIMIT ${SQLITE_TABLE_LIMIT};" |
		       while read -r sqlite_table; do
			   sqlite_rowcount="$(
			       sqlite3 "file:${FILE_PATH}?mode=ro" -noheader \
				   "SELECT count(*) FROM ${sqlite_table}"
			   )"
			   echo
			   if [ "${SQLITE_ROW_LIMIT}" -gt 0 ] &&
			      [ "${SQLITE_ROW_LIMIT}" \
				-lt "${sqlite_rowcount}" ]; then
			       echo "${sqlite_table} [${SQLITE_ROW_LIMIT} of ${sqlite_rowcount}]:"
			       sqlite_ellipsis_query="$(
				   sqlite3 "file:${FILE_PATH}?mode=ro" -noheader \
				       "SELECT 'SELECT ' || group_concat(
					   '''...''', ', '
				       )
				       FROM pragma_table_info(
					   '${sqlite_table}'
				       );"
			       )"
			       sqlite_show_query \
				   "SELECT * FROM (
				       SELECT * FROM ${sqlite_table} LIMIT 1
				   )
				   UNION ALL ${sqlite_ellipsis_query} UNION ALL
				   SELECT * FROM (
				       SELECT * FROM ${sqlite_table}
				       LIMIT (${SQLITE_ROW_LIMIT} - 1)
				       OFFSET (
					   ${sqlite_rowcount}
					   - (${SQLITE_ROW_LIMIT} - 1)
				       )
				   );"
			   else
			       echo "${sqlite_table} [${sqlite_rowcount}]:"
			       sqlite_show_query "SELECT * FROM ${sqlite_table};"
			   fi
		       done
	       fi
	       exit 5;;

	   ## Text
	   text/* | */xml)
	       ## Syntax highlight
	       if [[ "$( stat --printf='%s' -- "${FILE_PATH}" )" -gt "${HIGHLIGHT_SIZE_MAX}" ]]; then
		   exit 2
	       fi
	       if [[ "$( tput colors )" -ge 256 ]]; then
		   local pygmentize_format='terminal256'
		   local highlight_format='xterm256'
	       else
		   local pygmentize_format='terminal'
		   local highlight_format='ansi'
	       fi
	       env HIGHLIGHT_OPTIONS="${HIGHLIGHT_OPTIONS}" highlight \
		   --out-format="${highlight_format}" \
		   --force -- "${FILE_PATH}" && exit 5
	       env COLORTERM=8bit bat --color=always --style="${BAT_STYLE}" \
		   -- "${FILE_PATH}" && exit 5
	       pygmentize -f "${pygmentize_format}" -O "style=${PYGMENTIZE_STYLE}"\
		   -- "${FILE_PATH}" && exit 5
	       exit 2;;

	   ## DjVu
	   image/vnd.djvu)
	       ## Preview as text conversion (requires djvulibre)
	       djvutxt "${FILE_PATH}" | fmt -w "${PV_WIDTH}" && exit 5
	       exiftool "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## Image
	   image/*)
	       ## Preview as text conversion
	       # img2txt --gamma=0.6 --width="${PV_WIDTH}" -- "${FILE_PATH}" && exit 4
	       exiftool "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## Video and audio
#	   video/* | audio/*)
	   audio/*)
	       mediainfo "${FILE_PATH}" && exit 5
	       exiftool "${FILE_PATH}" && exit 5
	       exit 1;;

	   ## ELF files (executables and shared objects)
	   application/x-executable | application/x-pie-executable | application/x-sharedlib)
	       readelf -WCa "${FILE_PATH}" && exit 5
	       exit 1;;
       esac
   }

   handle_fallback() {
       echo '----- File Type Classification -----' && file --dereference --brief -- "${FILE_PATH}" && exit 5
   }


   MIMETYPE="$( file --dereference --brief --mime-type -- "${FILE_PATH}" )"
   if [[ "${PV_IMAGE_ENABLED}" == 'True' ]]; then
       handle_image "${MIMETYPE}"
   fi
   handle_extension
   handle_mime "${MIMETYPE}"
   handle_fallback

   exit 1
#+END_SRC
*** yazi
**** yazi.toml
#+BEGIN_SRC toml :tangle ~/.config/yazi/yazi.toml  :mkdirp yes
[manager]
ratio          = [ 1, 4, 3 ]
#+END_SRC
****  keymap.toml
#+BEGIN_SRC toml :tangle ~/.config/yazi/keymap.toml  :mkdirp yes
# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

prepend_keymap = [

	# Navigation

	{ on = "<", run = "back",    desc = "Go back to the previous directory" },
	{ on = ">", run = "forward", desc = "Go forward to the next directory" },


	# Visual mode

	# Seeking
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Spotting

	# Operation
	{ on = "d",         run = "yank --cut",                  desc = "Yank selected files (cut)" },
	{ on = "D",         run = "unyank",                      desc = "Cancel the yank status" },
	{ on = "x",         run = "remove",                      desc = "Trash selected files" },
	{ on = "X",         run = "remove --permanently",        desc = "Permanently delete selected files" },
	{ on = "a",         run = "create",                      desc = "Create a file (ends with / for directories)" },

	# Linemode

	# Copy

	# Filter

	# Find

	# Sorting

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "home" },
	{ on = [ "g", "c" ],       run = "cd ~/.config",     desc = "~/.config" },
	{ on = [ "g", "z" ],       run = "cd ~/Downloads",   desc = "~/Downloads" },
	{ on = [ "g", "d" ],       run = "cd ~/Документы",   desc = "~/Документы" },
	{ on = [ "g", "v" ],       run = "cd ~/Видео",   desc = "~/Видео" },
	{ on = [ "g", "m" ],       run = "cd ~/Музыка",   desc = "~/Музыка" },
	{ on = [ "g", "G" ],       run = "cd ~/git",   desc = "~/git" },

	# Tabs

	# Tasks

	# Help
]
#+END_SRC
* admin 
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    autojump # быстрый переход в командной оболочке
    bleachbit # чистка от мусора no guix
    btrfs-progs # работа с файловой системой btrfs
    conky #  отображение информационных панелей
    coreutils 
    dmenu # мени для х11
    fzf #cmd fuzzy finder
    glib
    gparted # редактирование разделов диска
    htop # просмотр процессов
    keepassxc # менеджер паролей 
    killall # завершение процессов
    libnotify # сообщения нотификации
    lsof # просмотр открытих файлов
    lshw
    navi #шпаргалка !!!
    perl540Packages.FileMimeInfo #mimeopen mimeinfo
    pmount # монтирование дисков
    tree # просмотр дерева каталогов
    usbutils # работа с usb
    util-linux # разные полезные утититы
    czkawka #поиск дубликатов,  похожих  и ненужных файлов no guix
    file # информация о типе файла
    mediainfo # информация о медиафайлах
    rofi # меню для запуска программ
    nix-search-cli
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC
*** conky
****  Gotham_clock
***** конфиг
#+BEGIN_SRC ascii :tangle ~/.config/conky/gotham/gotham.conf  :mkdirp yes
use_xft yes
xftfont 123:size=8
xftalpha 0.1
update_interval 1
total_run_times 0

own_window yes
own_window_type normal
own_window_transparent yes
own_window_hints undecorated,above,skip_taskbar,skip_pager
own_window_colour 000000
own_window_argb_visual yes
own_window_argb_value 0

double_buffer yes
#minimum_size 250 5
#maximum_width 500
draw_shades no
draw_outline no
draw_borders no
draw_graph_borders no
default_color white
default_shade_color red
default_outline_color green
alignment top_right
gap_x 0
gap_y 30
no_buffers yes
uppercase no
cpu_avg_samples 2
net_avg_samples 1
override_utf8_locale yes
use_spacer yes

minimum_size 0 0
TEXT
"
${voffset 10}${color EAEAEA}${font GE Inspira:pixelsize=120}${time %H:%M}${font}${voffset -84}${offset 10}${color FFA300}${font GE Inspira:pixelsize=42}${time %d} ${voffset -15}${color EAEAEA}${font GE Inspira:pixelsize=22}${time  %B} ${time %Y}${font}${voffset 24}${font GE Inspira:pixelsize=58}${offset -148}${time %A}${font}
${voffset 1}${offset 12}${font Ubuntu:pixelsize=12}${color FFA300}HD ${offset 9}$color${fs_free /} / ${fs_size /}${offset 30}${color FFA300}RAM ${offset 9}$color$mem / $memmax${offset 30}${color FFA300}CPU ${offset 9}$color${cpu cpu0}%





"
#+END_SRC
***** desktop-file
#+BEGIN_SRC text :tangle ~/.local/share/applications/gotham.desktop  :mkdirp yes
[Desktop Entry]
Name=Gotham Clock
GenericName=Gotham Clock
Comment=Часы на рабочий стол
Type=Application
Terminal=false
Exec=/usr/bin/env conky -c /home/andrey/.config/conky/gotham/gotham.conf 
Categories=Utility;Clock;
#+END_SRC
* develop 
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    cmake  # для разрабочиков ПО
    conda
    gcc_multi # для разрабочиков ПО
    gitFull # git
    go
    gnumake # для разрабочиков ПО
t#    mysql # sql сервер??
#    nodejs
#    php # программирование сайтов
    postgresql # сервер базы данных
    (python3.withPackages (subpkgs: with subpkgs; [
      jupyter-all
      ranger
      beautifulsoup4
    ]))
    pipx 
#    rakudo
#    zef # библиотеки rake
    sqlite # работа з базой данных
    sqlitebrowser # просмотр базы данных
    jq
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC

* archives
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    archivemount # mounting of cpio, .tar.gz, .tar.bz2
    atool # монтирование архивов 
    avfs # монтирование архивов
    unzip # архиватор
    unrar #архиватор
    zip # архиватор
    p7zip # архиватор
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC
* media 
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    deadbeef # медиаплеер и конвертор музыки no guix
    easytag
    ffmpeg-full # работа с видео
    ffmpegthumbnailer # скины видео
    feh # просмотр изображений
    gimp-with-plugins # графический редактор Gimp
    imagemagick # обрабока изображений
    jbig2enc # no guix
    jbig2dec
    lame # конвертирование медиа кодек
    mpv # видеоплеер
    sxiv # просмотр изображений
    strawberry # медиаплеер
    kodi
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC

* office,text 
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
services.emacs.enable=true;
services.emacs.startWithGraphical=true;
services.emacs.defaultEditor=true;
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    aspell # правописание
    aspellDicts.en # правописание
    aspellDicts.ru # правописание
    aspellDicts.uk # правописание
    bat # подсветка синтаксиса
    calibre # библиотека книг old wer guix
    catdoc # конвертирование документов Майкрософт Офис в текст
    djvu2pdf # конвертор djvu в pdf
    djvulibre # работа з djvu
    emacs
    epub2txt2
    ghostwriter #
    glow #Render markdown on the CLI, nnn view no guix
    highlight #подсветка текста
    htmlq
    hunspellDicts.en-us
    hunspellDicts.ru-ru 
    hunspellDicts.uk-ua
    jp # for cli view json no guix
    libreoffice # бесплатный офисa
    libretranslate
    marktext 
    miller # обработка файлов csv, json ...no guix
    mupdf # обработка pdf
    odt2txt # преобразование документов libreoffice в текст
    okular # просмотр документов
    pandoc
    pistol # для просмотра файлов no guix
    poppler # обработка pdf
    poppler_utils
    pdftk
    pdf2odt
    pdfchain
    qpdf
    python311Packages.html2text
    python311Packages.ocrmypdf #no guix
    python311Packages.pandoc-xnos
    python311Packages.pdf2docx
    python311Packages.weasyprint
    sigil # редактор книг epub no guix
    texliveFull
#    trilium-desktop
    vim_configurable # текстовый редактор
    whisper-ctranslate2
    wkhtmltopdf # для получения pdf в pandoc
    zathura # просмотр pdf
    recoll
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC
** emacs-config
*** какие сделать еще настройки
**** настроить org
 org-cycle-separator-lines посмотреть переменную, чтобы не отображались промежутки между заголовками
****  глянуть   Selectrum, Icicles, Icomplete
**** режим строки вкладок
  ; (global-tab-line-mode)
***** если регион не активен убить строку??
;M-x package-install whole-line-or-region
*** Скрыть панели и заставку и т.д. 
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(setq inhibit-startup-screen t)
(defalias 'yes-or-no-p 'y-or-n-p)
#+end_src 
*** Зеркала, use-package
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
  (require 'package)

  (add-to-list 'package-archives '("elpy" . "http://jorgenschaefer.github.io/packages/"))
  (add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/"))
  (add-to-list 'package-archives '("org" . "http://orgmode.org/elpa/"))
  (add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/"))
  (add-to-list 'package-archives '("nongnu" . "https://elpa.nongnu.org/nongnu/"))
  (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
  (package-initialize)

  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))
  (eval-when-compile
    (require 'use-package))
; устанавливать пакет, если он не установлен
  (require 'use-package-ensure)
  (setq use-package-always-ensure t)

#+end_src
*** Пакеты
**** helm 
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
  (use-package helm
    :bind (("M-x" . helm-M-x)
	   ("C-x r b" . helm-filtered-bookmarks)
	   ("C-x C-f" . helm-find-files)
	   ("C-x C-b" . helm-mini)
	   )
    :config
     (helm-mode 1)
     (add-to-list 'helm-completing-read-handlers-alist
		'(insert-file . nil))
    )
#+end_src 
**** markdown-mode
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
  (use-package markdown-mode)
#+end_src
**** dired
**** HTML
***** web-mode
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp :tangle no
(use-package web-mode
    :mode ("\\.html?\\'" . web-mode))
#+end_src   
***** emmet-mode
позволяет быстро писать HTML и CSS с помощью сокращений.
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp :tangle no
  (use-package emmet-mode
    :hook ((html-mode css-mode web-mode) . emmet-mode)
    :config
    ;; Установите уровень отступов по вашему предпочтению 
    (setq emmet-indentation 2)) 
#+end_src   
***** закрытие тегов с помощью sgml-mode
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp :tangle no
(add-hook 'html-mode-hook
          (lambda ()
            (setq sgml-quick-keys 'close)
            (sgml-electric-tag-pair-mode 1)))
#+end_src   
***** yasnippet для шаблонов HTML
#+header: :tangle no
#+begin_src emacs-lisp :exports none
(use-package yasnippet
  :config
  (yas-global-mode 1))
#+end_src   
**** calibredb toc-mode
посмотреть пакеты toc-mode centaur-tabs/awesome-tab counsel
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
    (use-package calibredb
      :config
       (setq calibredb-id-width -1)
       (setq calibredb-root-dir "~/Calibre/All")
       (setq calibredb-db-dir (expand-file-name "metadata.db" calibredb-root-dir))
       (setq calibredb-search-page-max-rows 200))
#+end_src 
**** DocView
#+begin_src emacs-lisp :tangle ~/.emacs.d/my_emacs.el :mkdirp yes

  (use-package doc-view
	    :config
	      ;; Прокрутка вверх колесиком мыши
	      (define-key doc-view-mode-map (kbd "<wheel-down>") 'doc-view-scroll-up-or-next-page)
              ;; Прокрутка вниз колесиком мыши
              (define-key doc-view-mode-map (kbd "<wheel-up>") 'doc-view-scroll-down-or-previous-page)
  )
#+end_src
**** telega 
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
  (use-package telega
    :bind-keymap 
	   ("C-c t" . telega-prefix-map)
    :bind (:map telega-chat-mode-map
	   ("s" . as-org-telega-msg)
	   ("y" . as-telega-news-copy))
	  (:map telega-prefix-map
	      ("g" .(lambda ()
			(interactive nil 'org-mode)
		      (telega-browse-url (org-entry-get (point) "url")))

	       ))
    :init
	   (setq telega-use-docker t)
    :config
	  (setq default-directory "~/Downloads/"))



   (defun as-org-telega-msg ()
     (interactive)
     (let ((msg (telega-msg-at (point))))
       (if msg (let*  ((chat (telega-msg-chat msg))
	    (title (telega-chat-title chat))
	    (text (progn (telega-msg-copy-text msg) (car kill-ring)))
	    (link (progn (telega-msg-copy-link msg) (car kill-ring )))
	    (date (format-time-string "<%Y-%m-%d %a %H:%M>" (plist-get msg :date)))
	    )
	    (current-kill 2)
	    (with-current-buffer (get-buffer-create "*my-news*")
	     (erase-buffer)
	     (org-mode)
	     (insert (concat "* " title "\n"))
	     (insert (concat text "\n"))
	     (org-set-property "url" link)
	     (org-set-property "date" date)
	     (org-set-property "channel" title)
	     (write-region nil nil "~/Документы/org/news.org" t)
	  )

  ))))

  (defun as-telega-news-copy ()
     (interactive)
     (when-let (msg (telega-msg-at (point)))
	  (let* ((chat (telega-msg-chat msg))
	      (title (telega-chat-title chat))
	      (text (progn (telega-msg-copy-text msg) (car kill-ring)))
	      (date (format-time-string " [%Y-%m-%d %a %H:%M]" (plist-get msg :date))))
	   (current-kill 1)
	   (when-let (fwrd (plist-get msg :forward_info))
		(setq date (format-time-string " [%Y-%m-%d %a %H:%M]" (plist-get fwrd :date)))
		(setq title (telega-chat-title (telega-chat-get (plist-get (plist-get fwrd :origin) :chat_id)))))    
	   (setq title (concat title date))
	   (setq text (string-lines text))
	   (while text
	    (setq title (concat title "\r\n" (car text)) text (cdr text)))
	   (x-set-selection nil title)
  )))





   (defun as-org-get-news()
    (interactive)
    (let ((text (car (last (string-trim (org-get-entry) ":END:"))))

	)		       
	(insert text)))

#+end_src

#+begin_src emacs-lisp
#+end_src
;; (insert (cdr (prop-match-value (text-property-search-forward ':telega-link))))
**** pandoc-mode
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
  (use-package pandoc-mode)
#+end_src

**** Org Mode 
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp :exports none
  (add-to-list 'auto-mode-alist '("\\.org\\(\\|_archive\\(_20[0-9][0-9]\\)?\\)$" . org-mode))
  (require 'org)
  ;;
  ;; Standard key bindings
  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-c " 'org-table-blank-field)
  (use-package ob-nix)
  (push '("\\.\\(pdf\\|djvu\\|epub\\)\\'" . "zathura %s") org-file-apps)
#+end_src

Действия при открытии org
#+begin_src emacs-lisp :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
(setq org-startup-folded "fold")
(setq org-hide-block-startup "hideblocks")
(setq org-hide-drawer-startup "hidedrawers")
(setq org-cycle-separator-lines 10)
#+end_src

Подтверждение выполнения кода
#+begin_src emacs-lisp :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
(setq org-link-shell-confirm-function nil)
(setq org-link-elisp-confirm-function nil)
(setq org-confirm-babel-evaluate nil)
#+end_src
****** Назначение клавиш
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
;;	(global-set-key (kbd "<f9> <SPC>") 'org-cycle-agenda-files)
	(global-set-key (kbd "<f9> l") 'org-toggle-link-display)
	(global-set-key (kbd "<f9> i") 'org-toggle-inline-images)
	(global-set-key (kbd "<f9> c") 'org-capture)
	(global-set-key (kbd "<f9> <f9>") 'as-org)


      (defun as-org()
	(interactive)
	(find-file "~/Documents/org/"))
#+end_src
Глобальные привязки клавиш нужны, чтобы с любого режима можна было выполнять функции org 
****** Задачи и состояния
:PROPERTIES:
:CUSTOM_ID: TasksAndStates
:END:

Я использую общий набор ключевых слов TODO для большинства своих организационных файлов.

#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
(setq org-todo-keywords
      '((sequence "ВЫПОЛНИТЬ(t)"   "|" "ГОТОВО(d!)" )
        (sequence "ОЖИДАНИЕ(w@/!)" "ПРИОСТАНОВЛЕНО(h@/!)" "|" "ОТМЕНЕНО(c@)" )))
#+end_src

=ОТМЕНЕНО= и =ГОТОВО= — состояния окончательного завершения.
Все остальные состояния являются открытыми активными состояниями задач.
******* Ключевые слова TODO
:PROPERTIES:
:CUSTOM_ID: TodoKeywords
:END:

Настройки цвета состояния =TODO=:
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
  (setq org-todo-keyword-faces
	(quote (("ВЫПОЛНИТЬ" :foreground "red" :weight bold)
		("ГОТОВО" :foreground "forest green" :weight bold)
		("ОЖИДАНИЕ" :foreground "orange" :weight bold)
		("ПРИОСТАНОВЛЕНО" :FOREGROUND "MAGENTA" :WEIGHT bold)
		("ОТМЕНЕНО" :foreground "forest green" :weight bold))))
#+end_src
******* Быстрый выбор задач
:PROPERTIES:
:CUSTOM_ID: FastTodoSelection
:END:

Быстрый выбор задач позволяет переходить из любого состояния задачи в любое.
другое состояние напрямую, выбрав соответствующую клавишу из быстрого
меню клавиши выбора задач. Это отличная функция!

#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
(setq org-use-fast-todo-selection t)
#+end_src

Изменение состояния задачи осуществляется с помощью =C-c C-t KEY=

где =KEY= — соответствующий ключ выбора состояния быстрого выполнения задачи, определенный в =org-todo-keywords=.

Настройка
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
(setq org-treat-S-cursor-todo-selection-as-state-change nil)
#+end_src

позволяет изменять состояния задач с помощью S-left и S-right, пропуская всю обычную обработку при входе в состояние todo или выходе из него. Это циклически перебирает состояния задач, но пропускает установку временных меток и ввод примечаний, что очень удобно, когда все, что вам нужно, это исправить статус записи.

******* Теги триггеры состояния TODO
:PROPERTIES:
:CUSTOM_ID: ToDoStateTriggers
:END:

Теги используются для удобной фильтрации задач в представлениях повестки дня.
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
(setq org-todo-state-tags-triggers
      (quote (("ОТМЕНЕНО" ("ОТМЕНЕНО" . t))
              ("ОЖИДАНИЕ" ("ОЖИДАНИЕ" . t))
              ("ПРИОСТАНОВЛЕНО" ("ОЖИДАНИЕ") ("ПРИОСТАНОВЛЕНО" . t))
              (done ("ОЖИДАНИЕ") ("ПРИОСТАНОВЛЕНО"))
              ("ВЫПОЛНИТЬ" ("ОЖИДАНИЕ") ("ОТМЕНЕНО") ("ПРИОСТАНОВЛЕНО"))
              ("ГОТОВО" ("ОЖИДАНИЕ") ("ОТМЕНЕНО") ("ПРИОСТАНОВЛЕНО")))))
#+end_src
******* Быстрое добавление новых задач с помощью Org Capture
:PROPERTIES:
:CUSTOM_ID: Capture
:END:
******** Шаблоны захвата
:PROPERTIES:
:CUSTOM_ID: CaptureTemplates
:END:

#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
    (setq org-directory "~/Документы/org")
    (setq org-default-notes-file "~/Документы/org/refile.org")

    ;; Я использую C-c c, чтобы запустить режим захвата
    (global-set-key (kbd "C-c c") 'org-capture)

    ;; Шаблоны захвата .
    (setq org-capture-templates
	  (quote (("t" "Выполнить" entry (file "~/Документы/org/refile.org")
		   "* ВЫПОЛНИТЬ %?\n%U\n%a\n" )
		  ("n" "Заметка" entry (file "~/Документы/org/rawnotes.org")
		   "* %? :NOTE:\n%U\n%a\n" )
		  ("j" "Дневник" entry (file+datetree "~/Документы/org/diary.org")
		   "* %?\n%U\n" )
		  ("w" "org-protocol" entry (file "~/Документы/org/refile.org")
		   "* ВЫПОЛНИТЬ Review %c\n%U\n" :immediate-finish t)
		  ("h" "Привычка" entry (file "~/Документы/org/refile.org")
		   "* ВЫПОЛНИТЬ %?\n%U\n%a\nSCHEDULED: %(format-time-string \"%<<%Y-%m-%d %a .+1d/3d>>\")\n)
;  :PROPERTIES:\n:STYLE: habit\n:REPEAT_TO_STATE: СЛЕДУЩЕЕ\n:END:\n")
		  )))
#+end_src

******** Refiling 
#+header: :tangle no
#+begin_src emacs-lisp
; Цели включают в себя этот файл и любой файл, вносящий вклад в повестку дня — до 9 уровней глубины.
(setq org-refile-targets (quote ((nil :maxlevel . 9)
                                 (org-agenda-files :maxlevel . 9))))

; Используйте полные пути для целей повторного файла — мы храним файлы напрямую в IDO.
(setq org-refile-use-outline-path t)

; Цели выполняются напрямую с IDO
(setq org-outline-path-complete-in-steps nil)

; Разрешить refile создавать родительские задачи с подтверждением
(setq org-refile-allow-creating-parent-nodes (quote confirm))

; Используйте IDO для завершения как буфера, так и файла, а также ido-everwhere для t
#(setq org-completion-use-ido t)
#(setq ido-everywhere t)
#(setq ido-max-directory-size 100000)
#(ido-mode (quote both))
; Использовать текущее окно при посещении файлов и буферов с помощью ido
#(setq ido-default-file-method 'selected-window)
#(setq ido-default-buffer-method 'selected-window)
; Использовать текущее окно для косвенного отображения буфера
#(setq org-indirect-buffer-display 'current-window)

;;;;  настройки refile
; Исключить задачи состояния ГОТОВО из целевых объектов refile
(defun bh/verify-refile-target ()
  "Exclude todo keywords with a done state from refile targets"
  (not (member (nth 2 (org-heading-components)) org-done-keywords)))

(setq org-refile-target-verify-function 'bh/verify-refile-target)
#+end_src


********* Языки программирования
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
  (org-babel-do-load-languages
  'org-babel-load-languages
  '((shell . t)
  (eshell . t)
  (org . t)
  (python . t)
  (awk . t)
  (sed . t)
  (sqlite . t)
  (nix . t)))
#+end_src
**** Org-Roam
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp 
    (use-package org-roam  :ensure t)
      (global-set-key "\C-cnf"  'org-roam-node-find)
      (global-set-key "\C-cnr"  'org-roam-node-random)
      (global-set-key "\C-cni"  'org-roam-node-insert)
      (global-set-key "\C-cno"  'org-id-get-create)
      (global-set-key "\C-cnt"  'org-roam-tag-add)
      (global-set-key "\C-cna"  'org-roam-alias-add)
      (global-set-key "\C-cnl"  'org-roam-buffer-toggle)

      (setq org-roam-directory (file-truename (concat (getenv "HOME") "/Документы/roam/IT")))
      (setq find-file-visit-truename nil) ;;не использовать символические ссылки
(setq org-roam-node-display-template (concat "${title:*} " (propertize "${tags:10}" 'face 'org-tag)))
;;       (org-roam-db-autosync-mode) ;; запустить синхронизацию bd

#+end_src
*** Полезные функции
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp
  (global-set-key  (kbd "<f12>")
       (defhydra hydra-as-global (:exit t)
	  "Полезные команды"
	("<SPC>" as-set-truncate-lines-refresh "перенос строк")
	("s" (switch-to-buffer "*scratch*") "*scratch*")
	("v" visible-mode "режим отображения")
	("i" org-display-inline-images "режим отображения")
	("<f12>" as-crow-translate "crow region")
	("q" nil "выход")))
    (global-set-key (kbd "<S-f12>") 'as-crow-translate-help)
    (global-set-key (kbd "<C-f12>") 'as-org-crow-translate-line)
    (global-set-key (kbd "<pause>") 'as-kill-current-buffer)

		  (defun as-set-truncate-lines-refresh ()
		    (interactive)
		    (setq truncate-lines (not truncate-lines))
		    ;; now refresh window display (an idiom from simple.el):
		    (save-excursion
		      (set-window-start (selected-window)
					(window-start (selected-window)))))

	      (defun as-kill-current-buffer()
	       (interactive)
	       (kill-buffer nil))

 
#+end_src   
**** crow-translate - перевод помеченого текста
#+header: :tangle ~/.emacs.d/my_emacs.el :mkdirp yes
#+begin_src emacs-lisp :exports none
			       (setq  as-translate-shell-cmd "crow -b -i -s en -e bing")

			       (defun as-crow-translate ()
				 "С помощью crow-translate переводит регион или строку на русский"
				 (interactive )
				 (let ((start) (end))
				 (unless (use-region-p)
				   (push-mark)
				   (end-of-line))    
				 (setq start (max (mark) (point)) end (min (mark)(point))) 
				 (shell-command-on-region start end as-translate-shell-cmd t t )
				 (delete-char -1)
				 (exchange-point-and-mark t)))


			     (defun as-crow-translate-help ()
			       "Переводит буфер *help* и выводит его в всплывающем окне."
			       (interactive)
			       (let ((help-buffer (get-buffer "*Help*")))
				 (if help-buffer
				     (with-current-buffer help-buffer  
				     (shell-command-on-region (point-min) (point-max)
				      (concat as-translate-shell-cmd 
				      "| zenity --text-info --width=800 --height=600 --title 'Перевод *Help*'")
				     nil nil)))))

			     (defun as-org-crow-translate-line ()
			       (interactive)
			       (forward-line 0)
			       (search-forward-regexp "^\** [0-9.]" (line-end-position) t)
			       (search-forward-regexp "^\**" (line-end-position) t)
			       (search-forward-regexp "::" (line-end-position) t)
			       (search-forward-regexp " *" (line-end-position) t)
			       (unless (eolp)
				   (shell-command-on-region (line-end-position) (point) as-translate-shell-cmd t t )
				   (delete-char -1)
				   (exchange-point-and-mark t)))

		(setq as-org-translate-skip-list
		     (list
		      '("^[ -@]*$\\|^ *|\\|[а-я]" nil)
		      '("^ *?:PROPERTIES:" "^ *:END:")
		      '("^ *?:.*?:" nil)
		      '("^ *?\\#\\+begin_example" "^ *?\\#\\+end_example")
		      '("^ *?\\#\\+begin_src" "^ *?\\#\\+end_src")
		      '("^ *?\\#\\+begin_html" "^ *?\\#\\+end_html")
		      '("^ *?\\#\\+\\|^ *?<<.*?>> *$\\|^ *?<<.*?>> *?<<.*?>> *$" nil)
		      ))
	       (defun as-org-skip-no-trans ()
		 (interactive)
		 (forward-line 0)
		 (let ((skip-list (seq-find (lambda (elem)
				(search-forward-regexp  (car elem) (line-end-position) t)) 
				  as-org-translate-skip-list)))
		   (if skip-list
		     (progn

		       (if (car (cdr skip-list))
			     (progn (forward-line)
			     (search-forward-regexp  (car (cdr skip-list)) nil t)))
		     (end-of-line)
		       ))))    

	      (defun as-org-translate-from-point ()
		 (interactive)
                 (let ((buf-lines (count-lines (point-min) (point-max)))) 
		 (while (not (eobp))
		   (as-org-skip-no-trans)
		   (unless (eolp)
		   (message "Перевод строки: %d/%d" (line-number-at-pos) buf-lines)
		   (as-org-crow-translate-line)
		   (end-of-line))
		   (forward-line))))


      (defun as-org-delete-empty-end-entry ()
	(interactive)
	(while  (and (search-forward-regexp "^ *$" nil t) (not (eobp)))
	  (forward-line)
	  (if (search-forward-regexp "^*" (line-end-position) t)
	      (progn (forward-line -1) (delete-line)))))
#+end_src 
**** my-org-prepare-translate
#+header: :tangle ~/.emacs.d/my-org-translate.el :mkdirp yes
#+begin_src emacs-lisp :exports none
  (defun my-org-prepare-translate (start end)
    (interactive "r")
    (let ((region-lines (split-string (buffer-substring-no-properties start end) "\n" t))
	  (line-regex '("^ *?:"
			   "^ *?\#\+begin_quote" "^ *?\#\+end_quote"
			       ))
	  (begin-block-regex '( "^ *?\\#\\+begin_src" "^ *?\\#\\+begin_example"))
	  (end-block-regex '( "^ *?\\#\\+end_src" "^ *?\\#\\+end_example"))
	  (pass-line)
	  (pass-block)
	  (to-translate (get-buffer-create "*to-translate*")) 
	  )
	(with-current-buffer to-translate (erase-buffer))
	(with-current-buffer (get-buffer-create "*translated*")
	  (erase-buffer)
	  (dolist (line region-lines)
	    (setq pass-line nil)
	    (let ((l (if pass-block end-block-regex begin-block-regex)))
	      (while l
		(if (string-match (car l) line)
		     (setq l nil pass-block (not pass-block) pass-line 1)
		     (setq l (cdr l)))
		))
	    (unless  pass-block
		(let ((l line-regex))
		  (while l
		    (if (string-match (car l) line)
			(setq l nil pass-line 1)
			(setq l (cdr l)))
		    )))
	    (insert (if (or pass-block pass-line) line ":"))
	    (insert "\n")
	    (with-current-buffer to-translate
	      (unless (or pass-block pass-line)
		(insert (concat line "\n"))))
		)
	  )))
#+end_src 

* virt
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
  virtualisation.docker = {
    enable = true;
    enableOnBoot = true;
  };
#  virtualisation.libvirtd.enable = true;
#  services.flatpak.enable = true; 
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
    docker-compose # контейнер docker
#    qemu # емулятор виртуальной машины
#    virt-manager # менеджер виртуальних машин
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
#+END_SRC
 
* scripts
#+begin_src bash :tangle ~/bin/mybackup :mkdirp yes :tangle-mode "a+x"
#!/usr/bin/env bash
sudo bash <<END
mount LABEL=manjaro /mnts || exit 1
mount -o compress=zstd LABEL=usbdelux /mnt || exit 1
rsync -av --delete /mnts/Data/ /mnt/Data/
rsync -av --delete /mnts/Documents/ /mnt/Documents/
rsync -av --delete /mnts/git/ /mnt/git/
rsync -av --delete /mnts/iso/ /mnt/iso/
rsync -av --delete /mnts/Downloads/ /mnt/Downloads/
rsync -av --delete /mnts/Music/ /mnt/Music/
rsync -av --delete /mnts/nixhome/ /mnt/nixhome/
# rsync -av --delete /mnts/Notesbooks/ /mnt/Notesbook/
rsync -av --delete /mnts/Pictures/ /mnt/Pictures/
rsync -av --delete /mnts/Videos/ /mnt/Videos/
rsync -av --delete /mnts/Calibre/All/ /mnt/Calibre/All/
#rsync -av --delete /mnts/trilium/ /mnt/trilium/
#rsync -av --delete /mnts/tiddlywiki/ /mnt/tiddlywiki/
umount /mnt
umount /mnts
END
#+end_src
* end all nix files
** services
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/services.nix :noweb yes :mkdirp yes
}
#+END_SRC
** packages
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/packages.nix :noweb yes :mkdirp yes
  ];
}
#+END_SRC
** enviroments
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/enviroments.nix :noweb yes :mkdirp yes
}
#+END_SRC
** programm-configs
*** delux
#+BEGIN_SRC nix :tangle ~/git/nixosconfig/delux-nix/programm-configs.nix :noweb yes :mkdirp yes
}
#+END_SRC
